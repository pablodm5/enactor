<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<retail:posPromptPage xmlns:core="http://www.enactor.com/core" xmlns:retail="http://www.enactor.com/retail" xmlns:ns4="http://www.enactor.com/crm" xmlns:sref="http://docs.oasis-open.org/wsbpel/2.0/serviceref" xmlns:ns6="http://www.apis-it.hr/fin/2012/types/f73" xmlns:ns7="http://www.w3.org/2000/09/xmldsig#" xmlns:ns8="http://www.fu.gov.si/" xmlns:ns9="http://www.enactor.com/addressLookup/service" xmlns:ns10="http://www.enactor.com/retail/storedRetailTransaction/service" xmlns:htd="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/200803" xmlns:hta="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803" xmlns:htt="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803" xmlns:ns14="http://www.enactor.com/crm/customerLoyalty/service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" windowtype="view-panel" messageBase="Pos/Order/CustomerOrderCollectionMessages" url="Pos/Order/CollectionSelectItemsPrompt">
    <core:elements>
        <core:text messageId="COLLECTION_SELECTION_PROMPT" id="Prompt">
            <core:uiMessage messageId="RETURN_SELECTION_PROMPT" applicability="notEmpty(forReturn) &amp;&amp; forReturn"/>
            <core:uiMessage messageId="CANCELLATION_SELECTION_PROMPT" messageBase="Pos/Order/OrderMessages" applicability="notEmpty(forCancellation) &amp;&amp; forCancellation"/>
        </core:text>
        <core:button messageId="#{page['SelectionList'].selectedItem.selected ? ((notEmpty(forCancellation) &amp;&amp; forCancellation) ? 'BUTTON_UNCANCELLATION' : ((notEmpty(forReturn) &amp;&amp; forReturn) ? 'BUTTON_UNRETURN' : 'BUTTON_UNCOLLECT')) : ((notEmpty(forCancellation) &amp;&amp; forCancellation) ? 'BUTTON_CANCELLATION' : ((notEmpty(forReturn) &amp;&amp; forReturn) ? 'BUTTON_RETURN' : 'BUTTON_COLLECT'))}" id="Button1">
            <core:updateTriggers>
                <core:element>SelectionList</core:element>
            </core:updateTriggers>
            <core:text>ToggleItem</core:text>
        </core:button>
        <core:button messageId="BUTTON_UP" visibility="#{page['SelectionList'].visible &amp;&amp; page['SelectionList'].moveUp}" id="Button2">
            <core:updateTriggers>
                <core:element>SelectionList</core:element>
            </core:updateTriggers>
            <core:text>page.SelectionList.up</core:text>
        </core:button>
        <core:button messageId="#{(notEmpty(forCancellation) &amp;&amp; forCancellation) ? 'BUTTON_CANCEL_ALL' : ((notEmpty(forReturn) &amp;&amp; forReturn) ? 'BUTTON_RETURN_ALL' : 'BUTTON_COLLECT_ALL')}" id="Button3">
            <core:updateTriggers>
                <core:element>SelectionList</core:element>
            </core:updateTriggers>
            <core:text>CollectAll</core:text>
        </core:button>
        <core:button messageId="#{(notEmpty(forCancellation) &amp;&amp; forCancellation) ? 'BUTTON_UNCANCEL_ALL' : ((notEmpty(forReturn) &amp;&amp; forReturn) ? 'BUTTON_UNRETURN_ALL' : 'BUTTON_UNCOLLECT_ALL')}" id="Button4">
            <core:updateTriggers>
                <core:element>SelectionList</core:element>
            </core:updateTriggers>
            <core:text>UncollectAll</core:text>
        </core:button>
        <core:button messageId="BUTTON_COMPLETE" id="Button5">
            <core:text>Complete</core:text>
        </core:button>
        <core:button messageId="BUTTON_DOWN" visibility="#{page['SelectionList'].visible &amp;&amp; page['SelectionList'].moveDown}" id="Button6">
            <core:updateTriggers>
                <core:element>SelectionList</core:element>
            </core:updateTriggers>
            <core:text>page.SelectionList.down</core:text>
        </core:button>
        <core:button messageId="BUTTON_ORDER_NOTES" visibility="#{!empty (page['SelectionList'].selectedItem)}" id="Button7">
            <core:updateTriggers>
                <core:element>SelectionList</core:element>
            </core:updateTriggers>
            <core:text>OrderNotes</core:text>
        </core:button>
        <core:button messageId="BUTTON_CANCEL" id="Button8">
            <core:text>CancelPressed</core:text>
        </core:button>
        <core:listBox lazyLoad="false" listSelectionMethod="DEFAULT" documentTemplateUrl="Pos/Order/CollectionSelectItemListTemplate" selectedIndex="0" verticalScrollBars="WhenNeeded" borderStyle="None" id="SelectionList">
            <core:flowConstraint/>
            <core:elements/>
            <core:verticalScrollBar orientation="VERTICAL" id="LISTBOX_SCROLL_BAR">
                <core:flowConstraint width="21" height="21"/>
            </core:verticalScrollBar>
            <core:listExpression>#{list}</core:listExpression>
            <core:listingElementEvents>
                <core:selectionEvent>page.SelectionList.changed</core:selectionEvent>
            </core:listingElementEvents>
        </core:listBox>
        <core:hidden id="InputBox"/>
        <core:hidden id="Receipt"/>
    </core:elements>
    <core:templateURL>Pos/StandardPosTemplate</core:templateURL>
    <core:events>
        <core:event destination="enactor.Prompt" event="key.EnterPressed">OKPressed</core:event>
        <core:event destination="SelectionList" event="key.UpPressed">up</core:event>
        <core:event destination="SelectionList" event="key.DownPressed">down</core:event>
    </core:events>
    <core:variables>
        <core:variable name="enactor.pos.ForReturn">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:variable>
        <core:variable name="enactor.pos.ForCancellation">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:variable>
    </core:variables>
    <core:scannerEnabled>true</core:scannerEnabled>
    <core:scannerDataName>enactor.pos.ScannerData</core:scannerDataName>
</retail:posPromptPage>
