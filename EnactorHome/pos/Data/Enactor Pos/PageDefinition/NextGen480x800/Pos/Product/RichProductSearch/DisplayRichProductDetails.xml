<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<core:window xmlns:core="http://www.enactor.com/core" xmlns:retail="http://www.enactor.com/retail" xmlns:ns4="http://www.enactor.com/crm" xmlns:hta="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803" xmlns:ns6="http://www.apis-it.hr/fin/2012/types/f73" xmlns:ns7="http://www.w3.org/2000/09/xmldsig#" xmlns:ns8="http://www.enactor.com/retail/storedRetailTransaction/service" xmlns:ns9="http://www.fu.gov.si/" xmlns:ns10="http://www.enactor.com/addressLookup/service" xmlns:htd="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/200803" xmlns:htt="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803" xmlns:sref="http://docs.oasis-open.org/wsbpel/2.0/serviceref" xmlns:ns14="http://www.enactor.com/crm/customerLoyalty/service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" hasBorders="FALSE" height="800" width="480" managementBeanClassname="com.enactor.pos.menu.LoadMenuBean" managementBeanName="loadMenu" messageBase="NextGen/PosMessages" url="NextGen480x800/Pos/Product/RichProductSearch/DisplayRichProductDetails">
    <core:elements>
        <retail:menuPageElement menuExpression="#{loadMenu.footerMenu}" id="FooterMenu">
            <retail:menu menuCatagory="RETAIL" menuType="TREE">
                <retail:menuSetId></retail:menuSetId>
                <retail:roleId>
                    <retail:roleId></retail:roleId>
                    <retail:regionId groupTypeId="region"></retail:regionId>
                </retail:roleId>
                <retail:menuGroupId groupTypeId="menuGroup"></retail:menuGroupId>
                <retail:menuDefaultGroupId groupTypeId="menuGroup"/>
                <retail:localeId></retail:localeId>
            </retail:menu>
            <retail:renderElement>FOOTER_BUTTONS_PAGE_REFERENCE.FooterRefPanel.Button1</retail:renderElement>
            <retail:renderElement>FOOTER_BUTTONS_PAGE_REFERENCE.FooterRefPanel.Button2</retail:renderElement>
            <retail:renderElement>FOOTER_BUTTONS_PAGE_REFERENCE.FooterRefPanel.Button3</retail:renderElement>
            <retail:renderElement>FOOTER_BUTTONS_PAGE_REFERENCE.FooterRefPanel.Button4</retail:renderElement>
        </retail:menuPageElement>
        <core:label messageId="#{(notEmpty(displayState) &amp;&amp; strings:compareStrings(displayState, 'SIZE')) ? 'SELECT_SIZE' : 'PRODUCT_DETAILS'}" id="TitleLabel"/>
        <core:button adjustImagesToSize="false" visible="true" id="BackButton">
            <core:text>BackPressed</core:text>
        </core:button>
        <core:panel id="DialogPanel">
            <core:elements>
                <core:panel transparentBackground="true" visibility="#{isEmpty(displayState) || strings:compareStrings(displayState, 'PRODUCT_DETAILS')}" id="ProductDetailsPanel">
                    <core:boundsConstraint height="637" width="480" y="0" x="0"/>
                    <core:elements>
                        <core:label styleClass="browseProdutShortDescriptionLabel" id="ProductShortDescriptionLabel">
                            <core:boundsConstraint height="50" width="430" y="13" x="26"/>
                            <core:text>#{productDetail.description}</core:text>
                        </core:label>
                        <core:panel transparentBackground="true" id="ProductNumberPanel">
                            <core:boundsConstraint height="25" width="300" y="72" x="25"/>
                            <core:elements>
<core:label messageId="PRODUCT_NO_LABEL" id="ProductNumberLabel">
    <core:flowConstraint/>
</core:label>
<core:label id="ProductNumberValue">
    <core:flowConstraint/>
    <core:text>#{productDetail.productId}</core:text>
</core:label>
                            </core:elements>
                        </core:panel>
                        <core:label messageId="CURRENT_PRICE_PRICE" styleClass="browsePriceLabel" id="ProductPriceLabel">
                            <core:boundsConstraint height="25" width="131" y="72" x="324"/>
                            <core:alignment>RIGHT</core:alignment>
                            <core:verticalAlignment>CENTRE</core:verticalAlignment>
                        </core:label>
                        <core:button adjustImagesToSize="false" styleClass="browsePreviousImageButton" transparentBackground="true" visibility="#{notEmpty(mediaList) &amp;&amp; ((!strings:compareStrings(strings:toString(currentMediaIndex),&quot;-1&quot;) &amp;&amp; !strings:compareStrings(largeImageURL ,&quot;NoImageLarge.png&quot;) ) || (!strings:compareStrings(strings:toString(currentMediaIndex),&quot;0&quot;)  &amp;&amp; strings:compareStrings(largeImageURL ,&quot;NoImageLarge.png&quot;) )) }" visible="true" id="PreviousImageButton">
                            <core:boundsConstraint height="100" width="50" y="168" x="25"/>
                            <core:text>Back</core:text>
                        </core:button>
                        <core:panel swipeEnabled="true" renderedExpression="#{strings:compareStrings(strings:toString(currentMediaIndex), &quot;-1&quot;)}" transparentBackground="true" backgroundImageURL="#{viewBasket:resolveURL(largeImageURL)}" style="ImageStyle=ScaledMaintainAspect" id="ProductImagePanel">
                            <core:boundsConstraint height="249" width="330" y="96" x="75"/>
                            <core:elements/>
                            <core:swipingElementEvents>
<core:swipeLeftEvent>Next</core:swipeLeftEvent>
<core:swipeRightEvent>Back</core:swipeRightEvent>
                            </core:swipingElementEvents>
                        </core:panel>
                        <core:panel swipeEnabled="true" renderedExpression="#{!strings:compareStrings(strings:toString(currentMediaIndex), &quot;-1&quot;) &amp;&amp; strings:compareStrings(currentMedia.mediaType,&quot;IMAGE_URL&quot;)}" transparentBackground="true" backgroundImageURL="#{viewBasket:resolveURL(currentMedia.mediaData)}" style="ImageStyle=ScaledMaintainAspect" id="ProductImagePanelMediaURL">
                            <core:boundsConstraint height="249" width="330" y="96" x="75"/>
                            <core:elements/>
                            <core:swipingElementEvents>
<core:swipeLeftEvent>Next</core:swipeLeftEvent>
<core:swipeRightEvent>Back</core:swipeRightEvent>
                            </core:swipingElementEvents>
                        </core:panel>
                        <core:panel swipeEnabled="true" renderedExpression="#{!strings:compareStrings(strings:toString(currentMediaIndex), &quot;-1&quot;) &amp;&amp; strings:compareStrings(currentMedia.mediaType,&quot;IMAGE&quot;)}" transparentBackground="true" backgroundImageURL="#{viewBasket:resolveURL(imageUrl)}" style="ImageStyle=ScaledMaintainAspect" id="ProductMediaImagePanel">
                            <core:boundsConstraint height="249" width="330" y="96" x="75"/>
                            <core:elements/>
                            <core:swipingElementEvents>
<core:swipeLeftEvent>Next</core:swipeLeftEvent>
<core:swipeRightEvent>Back</core:swipeRightEvent>
                            </core:swipingElementEvents>
                        </core:panel>
                        <core:button adjustImagesToSize="false" styleClass="browseNextImageButton" transparentBackground="true" visibility="#{notEmpty(mediaList) &amp;&amp; !strings:compareStrings(strings:toString(currentMediaIndex), strings:toString(mediaListSize-1)) }" id="NextImageButton">
                            <core:boundsConstraint height="100" width="50" y="168" x="404"/>
                            <core:text>Next</core:text>
                        </core:button>
                        <core:text allowWrap="true" styleClass="browseDescription" id="LongDescriptionText">
                            <core:boundsConstraint height="180" width="430" y="344" x="25"/>
                            <core:text>#{longDescription}</core:text>
                        </core:text>
                        <core:button messageId="SELECT_SIZE_AND_CHECK_STOCK" styleClass="bottomSpanButton" visibility="#{(notEmpty(sizeList) &amp;&amp; size(sizeList) &gt; 1) &amp;&amp; (empty(displayHint) || !strings:compareStrings(displayHint, 'BAG'))}" id="SelectSizeButton">
                            <core:boundsConstraint height="71" width="480" y="566" x="0"/>
                            <core:text>ChangeDisplayState</core:text>
                            <core:data>
<core:expression value="SIZE" javaInterfaceName="java.lang.String" name="enactor.pos.DisplayState"/>
                            </core:data>
                        </core:button>
                        <core:button messageId="CHECK_STOCK" styleClass="bottomSpanButton" visibility="#{(empty(sizeList) || size(sizeList) == 1) &amp;&amp; (empty(displayHint) || !strings:compareStrings(displayHint, 'BAG'))}" id="CheckStockButton">
                            <core:boundsConstraint height="71" width="480" y="566" x="0"/>
                            <core:text>StoreStockCheck</core:text>
                        </core:button>
                        <core:text messageBase="NextGen/PosMessages" messageId="LABEL_COLOUR" styleClass="rpsSubTitle" visibility="#{notEmpty(colourList) &amp;&amp; instanceOf(product, 'com.enactor.mfc.product.IStyleColourSizeProduct')}" id="Colourlabel">
                            <core:boundsConstraint height="30" width="140" y="524" x="25"/>
                        </core:text>
                        <core:comboBox manualDropDownDisabled="false" lazyLoad="false" allowBlank="#{true}" editable="true" styleClass="rpsComboBox" visibility="#{notEmpty(colourList) &amp;&amp; instanceOf(product, 'com.enactor.mfc.product.IStyleColourSizeProduct')}" id="ColourCombo">
                            <core:boundsConstraint height="40" width="144" y="524" x="150"/>
                            <core:text>#{selectedColour}</core:text>
                            <core:textElementEvents valueChangedEvent="ColourSelected"/>
                            <core:listExpression>#{viewBasket:getCoulorKeysAndDescriptionList(colourList, dynamicColourKeysMap)}</core:listExpression>
                            <core:listingElementEvents>
<core:selectionEvent>ColourSelected</core:selectionEvent>
                            </core:listingElementEvents>
                        </core:comboBox>
                    </core:elements>
                </core:panel>
                <core:panel renderedExpression="#{notEmpty(sizeList)}" transparentBackground="true" visibility="#{notEmpty(displayState) &amp;&amp; strings:compareStrings(displayState, 'SIZE')}" id="SizePanel">
                    <core:boundsConstraint height="637" width="480" y="0" x="0"/>
                    <core:elements>
                        <core:dataTable rowSelection="false" var="row" data="#{sizeList}" verticalScrollBars="WhenNeeded" transparentBackground="true" id="SizeListDataTable">
                            <core:boundsConstraint height="566" width="480" y="0" x="0"/>
                            <core:cell id="SizeCell">
<core:elements>
    <core:eventPanel styleClass="selectListPanel" id="SizePanel">
        <core:flowConstraint/>
        <core:elements>
            <core:label styleClass="listElementLabel" id="SizeDescription">
                <core:flowConstraint/>
                <core:text>#{dynamicColourKeysMap[row.sizeKey] == null ? row.sizeKey.sizeId : dynamicColourKeysMap[row.sizeKey].description}</core:text>
            </core:label>
            <core:panel styleClass="separatorPanel" id="SeparatorPanel">
                <core:flowConstraint width="480" height="7"/>
                <core:elements/>
            </core:panel>
        </core:elements>
        <core:clickEvent>StoreStockCheck</core:clickEvent>
        <core:data>
            <core:expression value="#{row}" javaInterfaceName="java.lang.Object" name="enactor.pos.SelectedSize"/>
        </core:data>
    </core:eventPanel>
</core:elements>
<core:elementPadding left="0" bottom="0" right="0" top="0"/>
                            </core:cell>
                        </core:dataTable>
                    </core:elements>
                </core:panel>
            </core:elements>
        </core:panel>
        <core:panel namingContainer="false" id="FooterPanel">
            <core:elements>
                <core:pageElementRef pageDefinitionURL="Pos/FooterButtons" elementIdRef="FooterRefPanel" transparentBackground="true" id="FOOTER_BUTTONS_PAGE_REFERENCE">
                    <core:boundsConstraint height="87" width="480" y="0" x="0"/>
                    <core:elements/>
                    <core:parameter value="#{notEmpty(displayHint)? displayHint : 'BROWSE'}" name="enactor.pos.DisplayHint">
                        <core:interfaceName>java.lang.String</core:interfaceName>
                    </core:parameter>
                </core:pageElementRef>
            </core:elements>
        </core:panel>
    </core:elements>
    <core:templateURL>NextGen480x800/Pos/RichProductDetailsTemplate</core:templateURL>
    <core:variables>
        <core:variable required="true" name="enactor.coreUI.MediaList">
            <core:interfaceName>java.util.List</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.pos.CurrentMedia">
            <core:interfaceName>com.enactor.mfc.productMedia.IProductMedia</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.pos.MediaListSize">
            <core:interfaceName>java.lang.Integer</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.pos.CurrentMediaIndex">
            <core:interfaceName>java.lang.Integer</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.pos.DisplayState">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.pos.SelectedSize">
            <core:interfaceName>java.lang.Object</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.pos.SizeList">
            <core:interfaceName>java.util.List</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.mfc.LongDescription">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.pos.LargeImageURL">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.mfc.ImageUrl">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.productCatalogue.ProductDetail">
            <core:interfaceName>com.enactor.productCatalogueSearchMessages.productCatalogueSearch.IProductSearchDetail</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.dynamicMap.DynamicColourKeysMap">
            <core:interfaceName>com.enactor.core.utilities.DynamicMap</core:interfaceName>
        </core:variable>
        <core:variable required="true" name="enactor.pos.DisplayHint">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:variable>
    </core:variables>
    <core:functionLibraries>
        <core:functionLibrary name="viewBasket" path="com.enactor.posAdditionalThemes.nextGen.beans.ViewBasketBean">
            <core:type>CLASS</core:type>
        </core:functionLibrary>
    </core:functionLibraries>
</core:window>
