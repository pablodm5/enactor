<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<core:process xmlns:core="http://www.enactor.com/core" xmlns:retail="http://www.enactor.com/retail" xmlns:ns4="http://www.enactor.com/crm" xmlns:hta="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803" xmlns:ns6="http://www.apis-it.hr/fin/2012/types/f73" xmlns:ns7="http://www.w3.org/2000/09/xmldsig#" xmlns:ns8="http://www.enactor.com/retail/storedRetailTransaction/service" xmlns:ns9="http://www.fu.gov.si/" xmlns:ns10="http://www.enactor.com/addressLookup/service" xmlns:htd="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/200803" xmlns:htt="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803" xmlns:sref="http://docs.oasis-open.org/wsbpel/2.0/serviceref" xmlns:ns14="http://www.enactor.com/crm/customerLoyalty/service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <core:processID>Pos/GiftCard/GiftCardTenderMain</core:processID>
    <core:version>1.0</core:version>
    <core:name></core:name>
    <core:defaultMessageBaseName></core:defaultMessageBaseName>
    <core:firstStateID>GetGiftCardDetails</core:firstStateID>
    <core:className></core:className>
    <core:uiHints>
        <entry>
            <key>com.enactor.tools.editor.process.style</key>
            <value>127</value>
        </entry>
        <entry>
            <key>com.enactor.tools.editor.process.xloc</key>
            <value>19</value>
        </entry>
        <entry>
            <key>com.enactor.tools.editor.process.yloc</key>
            <value>17</value>
        </entry>
    </core:uiHints>
    <core:metaData>
        <core:inputs>
            <core:input name="enactor.pos.CardNumberScanned">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.PosTerminal">
                <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.GiftCardTypeKey">
                <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.Tender">
                <core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.IsChange">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </core:input>
            <core:input name="enactor.coreUI.AuthorisingUser">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.TenderAmount">
                <core:interfaceName>java.lang.Long</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.BaseCurrency">
                <core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.Location">
                <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.IsReversal">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.mfc.TransactionHandler">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.ReturnOriginalTenderDetail">
                <core:interfaceName>com.enactor.mfc.basket.items.IReturnOriginalTenderDetail</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.CardTrack2">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.mfc.TenderId">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.IsRefund">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </core:input>
            <core:input name="Cashdrawer">
                <core:interfaceName>com.enactor.coreUI.peripherals.cashdrawer.ICashdrawer</core:interfaceName>
            </core:input>
            <core:input name="enactor.coreUI.User">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.PartialBalance">
                <core:interfaceName>java.lang.Long</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.EnteredTenderAmount">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.GiftCardType">
                <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
            </core:input>
            <core:input name="PrimaryPrinter">
                <core:interfaceName>com.enactor.coreUI.peripherals.printer.IPrinter</core:interfaceName>
            </core:input>
        </core:inputs>
        <core:outputs>
            <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
            </core:output>
            <core:output required="true" name="enactor.mfc.GiftCardDetails">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
            </core:output>
            <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
            </core:output>
            <core:output name="enactor.mfc.Tender">
                <core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
            </core:output>
            <core:output required="true" name="enactor.mfc.TenderCurrency">
                <core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
            </core:output>
            <core:output name="enactor.mfc.GiftCardType">
                <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
            </core:output>
            <core:output required="true" name="enactor.mfc.GiftCardTenderItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
            </core:output>
            <core:output required="true" name="enactor.mfc.Acquirer">
                <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
            </core:output>
        </core:outputs>
        <stateDataTypes>
            <stateDataType required="true" name="enactor.pos.PayableTenderValue">
                <core:interfaceName>java.lang.Long</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.TenderCurrency">
                <core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.IsChange">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.TenderAmount">
                <core:interfaceName>java.lang.Long</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.Location">
                <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.ReturnOriginalTenderDetail">
                <core:interfaceName>com.enactor.mfc.basket.items.IReturnOriginalTenderDetail</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.TenderId">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.coreUI.User">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.GiftCardType">
                <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="MessageText">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.GiftCardTenderItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.IINRange">
                <core:interfaceName>com.enactor.mfc.iinRange.IIINRange</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.CardNumberScanned">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.GiftCardDetails">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.PosTerminal">
                <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.Tender">
                <core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.GiftCardTypeKey">
                <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.coreUI.AuthorisingUser">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.BaseCurrency">
                <core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.CardNumberKeyed">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.IsReversal">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.TransactionHandler">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.CardTrack2">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.GiftCardCardType">
                <core:interfaceName>com.enactor.mfc.cardType.IGiftCardCardType</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.IsRefund">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
            <stateDataType name="Cashdrawer">
                <core:interfaceName>com.enactor.coreUI.peripherals.cashdrawer.ICashdrawer</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.PartialBalance">
                <core:interfaceName>java.lang.Long</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.EnteredTenderAmount">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.CardType">
                <core:interfaceName>com.enactor.mfc.cardType.IGiftCardCardType</core:interfaceName>
            </stateDataType>
            <stateDataType name="PrimaryPrinter">
                <core:interfaceName>com.enactor.coreUI.peripherals.printer.IPrinter</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.Acquirer">
                <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceRequest">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceRequest</core:interfaceName>
            </stateDataType>
        </stateDataTypes>
    </core:metaData>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessFail</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>564</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>37</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Fail</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessCancel</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1042</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>40</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Cancel</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>OnlineAuthorisation</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4215</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>292</value>
            </entry>
        </core:uiHints>
        <core:param value="#{enumValue('com.enactor.cardAuthorisation.messages.AuthorisationActionType','UPDATE')}" name="enactor.cardAuthorisation.AuthorisationActionType">
            <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.AuthorisationActionType">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="ReferralRequested"/>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Declined"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>AuthorisationComplete</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>Cancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>AuthorisationError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>4</core:linkID>
            <core:toStateID>NotAuthorised</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Declined</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>5</core:linkID>
            <core:toStateID>NotAuthorised</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>ReferralRequested</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>6</core:linkID>
            <core:toStateID>AuthorisationComplete</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>(process.isChange &amp;&amp; process.giftCardType.allowSaleOffline)
 || (process.isRefund &amp;&amp; process.giftCardType.allowSaleOffline)
 || (!process.isChange &amp;&amp; !process.isRefund &amp;&amp; process.giftCardType.allowRedemptionOffline)</core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>7</core:linkID>
            <core:toStateID>BalanceNotSufficient</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>process.giftCardAuthorisationResponse.outcome == 'BalanceNotSufficient' &amp;&amp; process.giftCardAuthorisationResponse.balance &gt; 0</core:condition>
            <core:outcome>Declined</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GiftCardAuthorisation</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LoadTender</core:actionID>
        <core:name>Load Tender</core:name>
        <core:className>com.enactor.pos.packages.tender.processes.LoadTender</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>63</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>876</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>299</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.mfc.TenderKey">
                    <core:interfaceName>com.enactor.mfc.tender.ITenderKey</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.TenderId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.GroupKey">
                    <core:interfaceName>com.enactor.core.group.IGroupKey</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.mfc.Tender">
                    <core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                </core:output>
                <core:output name="enactor.mfc.TenderCurrency">
                    <core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>Load tender using the GiftCardCardType if defined otheriwse must be supplied as tender id.</core:comment>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>CreateGiftCardItem</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetGiftCardDetails</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1470</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>367</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardTenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardTenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment></core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestTenderRestrictions</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetAuthorisingUserOnTenderItem</core:toActionID>
            <core:condition>(notEmpty(process.isRefund) &amp;&amp; process.isRefund) || (notEmpty(process.isReversal) &amp;&amp; process.isReversal) || (notEmpty(process.isChange) &amp;&amp; process.isChange)</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardTenderItem.giftCardDetails" fromExpression="giftCardDetails"/>
    </core:assignAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>GetTenderAmount</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3259</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>261</value>
            </entry>
        </core:uiHints>
        <core:param value="false" name="enactor.pos.SuggestTenderValues">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="MessageBase">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="MessageText">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.User">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.UserLocale">
                    <core:interfaceName>com.enactor.core.localisation.ILocale</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.PartialBalance">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.PosTerminal">
                    <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.ReturnOriginalTenderDetail">
                    <core:interfaceName>com.enactor.mfc.basket.items.IReturnOriginalTenderDetail</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Tender">
                    <core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TenderCurrency">
                    <core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.EnteredTenderAmount">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.IsLoyaltyRedemption">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.IsRefund">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.MaxRedemption">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.MaxSuggestedValues">
                    <core:interfaceName>java.lang.Integer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.SuggestTenderValues">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.TenderAmount">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.PayableTenderValue">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.TenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="CardRemoved"/>
                <core:outcome name="Suspend"/>
                <core:outcome name="Cancel"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>Cancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>CaptureReference</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>4</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuspend</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Suspend</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetTenderAmount</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>CardRemoved</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/Tender/GetTenderAmount</core:executeProcessId>
    </core:executeProcessAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CaptureReference</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>11</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3533</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>311</value>
            </entry>
        </core:uiHints>
        <core:param value="true" name="enactor.pos.EnableScanner">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="CaptureReferencePromptMessageBase">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.User">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.FieldValidatorSetId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.EnableScanner">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="ReferenceNumber">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Cancel"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>CaptureNameAndAddress</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>Cancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/Reference/CaptureReference</core:executeProcessId>
    </core:executeProcessAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CaptureCustomerAddress</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>47</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3796</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>311</value>
            </entry>
        </core:uiHints>
        <core:param value="true" name="FullAddressRequired">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="CaptureAddressPromptMessageBase">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="CaptureNamePromptMessageBase">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="NotCaptureAddress">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input name="NotCaptureName">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input name="FullAddressRequired">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input required="false" name="enactor.coreUI.User">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.UserLocale">
                    <core:interfaceName>com.enactor.core.localisation.ILocale</core:interfaceName>
                </core:input>
                <core:input required="false" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessFail</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>Cancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>Authorise</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/Address/SetCustomerNameAndAddress</core:executeProcessId>
    </core:executeProcessAction>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessSuccess</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4799</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>63</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Success</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>GetGiftCardDetails</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>556</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>298</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.User">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.GiftCardTypeKey">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.Location">
                    <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.PosTerminal">
                    <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardNumberScanned">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardTrack2">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.mfc.GiftCardCardType">
                    <core:interfaceName>com.enactor.mfc.cardType.IGiftCardCardType</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>LoadTender</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessFail</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GetGiftCardDetails</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>ValidateChangeAmount</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.pos.packages.tender.processes.ValidateTenderAmount</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3292</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>783</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.pos.IsRefund">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.TenderAmount">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Location">
                    <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.EnteredTenderAmount">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.TenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="InvalidTenderAmount"/>
                <core:outcome name="TenderAmountRequired"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>CaptureReference</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>InvalidAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>InvalidTenderAmount</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>InvalidAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>TenderAmountRequired</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LoadTenderCurrency</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.commonUI.entities.processes.LoadEntityAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>949</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>608</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.Key">
                    <core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.EndpointReference">
                    <core:interfaceName>com.enactor.core.webService.epr.IServiceEndpointReference</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.coreUI.Entity">
                    <core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                </core:output>
                <core:output name="enactor.coreUI.Key">
                    <core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>CreateGiftCardItem</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetNewCard</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2563</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>909</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardTenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.mfc.GiftCardTenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>If this is a refund or change tender, assume a new card</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardDetails.newCard" fromExpression="true"/>
    </core:assignAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetAuthorisingUserOnTenderItem</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.pos.packages.basket.processes.SetAuthorisingUserOnItem</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>63</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1333</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>830</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.AuthorisingUser">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.SecondAuthorisingUser">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>LoadAcquirer</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>OnlineAuthorisation2</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>5241</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>125</value>
            </entry>
        </core:uiHints>
        <core:param value="#{enumValue('com.enactor.cardAuthorisation.messages.AuthorisationActionType','UPDATE')}" name="enactor.cardAuthorisation.AuthorisationActionType">
            <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.AuthorisationActionType">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="ReferralRequested"/>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Declined"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>Cancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>NotAuthorised</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Declined</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>4</core:linkID>
            <core:toStateID>NotAuthorised</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>ReferralRequested</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>5</core:linkID>
            <core:toStateID>AuthorisationError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GiftCardAuthorisation</core:executeProcessId>
    </core:executeProcessAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetBalanceAsAmount</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>5241</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>550</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardTenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardTenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>OnlineAuthorisation2</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardTenderItem.tenderAmount" fromExpression="giftCardAuthorisationResponse.balance"/>
    </core:assignAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogError</core:actionID>
        <core:name>UILogMessageAction</core:name>
        <core:className>com.enactor.coreUI.actions.UILogMessageAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>331</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>207</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>ProcessError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>ProcessError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>OnlineEnquiryAuthorisation</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2075</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>625</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceRequest">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceRequest</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Declined"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>AuthorisationError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>GetAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>5</core:linkID>
            <core:toStateID>NotActive</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>process.giftCardBalanceResponse.status != enumValue('com.enactor.mfc.giftCard.GiftCardStatus', 'AVAILABLE')
 &amp;&amp; process.giftCardBalanceResponse.status != enumValue('com.enactor.mfc.giftCard.GiftCardStatus', 'ACTIVE')</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>4</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>NewCardConfirmationExtension</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Declined</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GiftCardOnlineEnquiry</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LoadAcquirer</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.commonUI.entities.processes.LoadEntityAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1617</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1046</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.Key">
                    <core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.coreUI.Entity">
                    <core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                </core:output>
                <core:output name="enactor.coreUI.Key">
                    <core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>OverrideAcquirerCredentials</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>GetAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>process.isReversal != null &amp;&amp; process.isReversal</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessSuspend</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2925</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>101</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Suspend</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>OnlineRedemptionBalanceEnquiry</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2050</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>241</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceRequest">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceRequest</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Declined"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>AuthorisationError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>NoAccount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Declined</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>4</core:linkID>
            <core:toStateID>ShowBalance</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>notEmpty(process.giftCardBalanceResponse.cardCurrencyId) &amp;&amp; process.giftCardBalanceResponse.cardCurrencyId != process.baseCurrency.currencyId</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>5</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetCardBalanceAsPayable</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GiftCardOnlineEnquiry</core:executeProcessId>
    </core:executeProcessAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetCardBalanceAsPayable</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2658</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>331</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.pos.PayableTenderValue">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetAmountEntryPrompt</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="payableTenderValue" fromExpression="giftCardBalanceResponse.balance"/>
    </core:assignAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>GetAmountEntryPrompt</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.commonUI.message.processes.GetMessageAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2878</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>331</value>
            </entry>
        </core:uiHints>
        <core:param value="Pos/GiftCard/GiftCardMessages" name="enactor.coreUI.MessageBasename">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:param>
        <core:param value="GIFT_CARD_BALANCE_AMOUNT_ENTRY" name="enactor.coreUI.MessageId">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.MessageBasename">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.MessageId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.UserLocale">
                    <core:interfaceName>java.util.Locale</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.coreUI.Message">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
                <core:outcome name="Fail"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>GetAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestRefundToNewCard</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2081</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>902</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>If Refund to New Card is set, we skip the enquiry check, assume a new card and so issue a Load New Card (activate) request.</core:comment>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetNewCard</core:toActionID>
            <core:condition>process.giftCardType.refundToNewCard</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>OnlineEnquiryAuthorisation</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestRefundToNewCard2</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2049</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>994</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>If Refund to New Card is set, we skip the enquiry check, assume a new card and so issue a Load New Card (activate) request.</core:comment>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetNewCard</core:toActionID>
            <core:condition>(process.isRefund || process.isChange) &amp;&amp; process.giftCardType.refundToNewCard</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CreateTenderItem</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>959</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1173</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>304</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.mfc.PosTerminal">
                    <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Tender">
                    <core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.User">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TenderCurrency">
                    <core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.IsRefund">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.IsChange">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.TenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetGiftCardDetails</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>MFC/Tender/CreateTenderItem</core:executeProcessId>
    </core:executeProcessAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestTenderRestrictions</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1470</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>502</value>
            </entry>
        </core:uiHints>
        <core:param value="false" name="enactor.cardPayment.NonInteractive">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input required="false" name="enactor.coreUI.AuthorisingUser">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Tender">
                    <core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.cardPayment.NonInteractive">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="false" name="enactor.coreUI.AuthorisingUser">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.mfc.TenderItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessFail</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetAuthorisingUserOnTenderItem</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>MFC/Tender/TestTenderRestrictions</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>Test Refund Type</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1871</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>735</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.NullAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>Test Redeem Balance Type</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestRefundToNewCard</core:toActionID>
            <core:condition>process.isRefund || process.isChange</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>Test Redeem Balance Type</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1874</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>648</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.NullAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>GetAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>OnlineRedemptionBalanceEnquiry</core:toActionID>
            <core:condition>state.acquirer.checkBalanceOnRedeem</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>OverrideAcquirerCredentials</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1832</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1046</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Location">
                    <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>Test Refund Type</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GiftCardRetrieveAccountCredentials</core:executeProcessId>
    </core:executeProcessAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>NewCardConfirmationExtension</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallExtensionPointProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>11</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2319</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1046</value>
            </entry>
        </core:uiHints>
        <core:param value="NewGiftCardConfirmation" name="enactor.coreUI.ExtensionPointId">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.ExtensionPointId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
                <core:outcome name="Fail"/>
                <core:outcome name="enactor.action.StopExtensionLinking"/>
                <core:outcome name="Cancel"/>
                <core:outcome name="NewCard"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallExtensionPoint</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetNewCard</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>enactor.action.StopExtensionLinking</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetNewCard</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetNewCard</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>4</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetNewCard</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>NewCard</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>5</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId></core:executeProcessId>
    </core:executeProcessAction>
    <core:eventLink>
        <core:linkID>1</core:linkID>
        <core:toStateID></core:toStateID>
        <core:toActionID>LogError</core:toActionID>
        <core:condition></core:condition>
        <core:event>Exception</core:event>
    </core:eventLink>
    <core:messageState>
        <core:url>/Error/Error</core:url>
        <core:stateID>ProcessError</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIErrorState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>331</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>129</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>ExceptionMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessFail</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>GENERAL_ERROR</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:state>
        <core:url></core:url>
        <core:stateID>CreateGiftCardItem</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1182</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>741</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes/>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>SetAuthorisingUserOnTenderItem</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.AuthorisingUser">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.AuthorisingUser">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.pos.SecondAuthorisingUser">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
            <core:actionMapping>
                <core:actionID>TestTenderRestrictions</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Tender">
<core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Tender">
<core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.AuthorisingUser">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="false" name="enactor.coreUI.AuthorisingUser">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>CreateTenderItem</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
            <core:actionMapping>
                <core:actionID>TestTenderRestrictions</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="false" name="enactor.coreUI.AuthorisingUser">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.AuthorisingUser">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CreateTenderItem</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>WrongCardTypeTender</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>notEmpty(process.giftCardCardType.tenderKey) &amp;&amp; (process.giftCardCardType.tenderKey.tenderId != process.tender.tenderId)</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>Authorise</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4215</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>703</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>OnlineAuthorisation</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>OnlineAuthorisation</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>OnlineAuthorisation</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>AuthorisationComplete</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>(notEmpty(process.isReversal) &amp;&amp; process.isReversal) || empty(process.acquirer)</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>GetAmount</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2941</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>768</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>GetTenderAmount</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.PosTerminal">
<core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.PosTerminal">
<core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.IsRefund">
<core:interfaceName>java.lang.Boolean</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.pos.IsRefund">
<core:interfaceName>java.lang.Boolean</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TenderCurrency">
<core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TenderCurrency">
<core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.TenderAmount">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.TenderAmount">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.PartialBalance">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.PartialBalance">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.ReturnOriginalTenderDetail">
<core:interfaceName>com.enactor.mfc.basket.items.IReturnOriginalTenderDetail</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.ReturnOriginalTenderDetail">
<core:interfaceName>com.enactor.mfc.basket.items.IReturnOriginalTenderDetail</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="MessageText">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="MessageText">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.pos.PayableTenderValue">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.PayableTenderValue">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.EnteredTenderAmount">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.EnteredTenderAmount">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Tender">
<core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Tender">
<core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.UserLocale">
<core:interfaceName>com.enactor.core.localisation.ILocale</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>user.locale</core:expression>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.pos.MaxRedemption">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.pos.IsLoyaltyRedemption">
<core:interfaceName>java.lang.Boolean</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.pos.MaxSuggestedValues">
<core:interfaceName>java.lang.Integer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:targetDataType name="MessageBase">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
            <core:actionMapping>
                <core:actionID>ValidateChangeAmount</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.TenderAmount">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.TenderAmount">
<core:interfaceName>java.lang.Long</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.IsRefund">
<core:interfaceName>java.lang.Boolean</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.IsRefund">
<core:interfaceName>java.lang.Boolean</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.EnteredTenderAmount">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.EnteredTenderAmount">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Location">
<core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Location">
<core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>GetTenderAmount</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
            <core:actionMapping>
                <core:actionID>ValidateChangeAmount</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.ITenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetTenderAmount</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>ValidateChangeAmount</core:toActionID>
            <core:condition>process.isChange</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>CaptureReference</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3533</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>703</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="ReferenceNumber">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>CaptureReference</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="false" name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Tender">
<core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.FieldValidatorSetId">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>notEmpty(tender.referenceNumberValidatorId) ? tender.referenceNumberValidatorId.setId : null</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Tender">
<core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="CaptureReferencePromptMessageBase">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>notEmpty(tender.promptMessageSet) ? tender.promptMessageSet : 'Pos/Tender/TenderPromptMessages'</core:expression>
                        </core:mappings>
                    </core:processMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CaptureReference</core:toActionID>
            <core:condition>process.tender.promptForReferenceNumber</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>CaptureNameAndAddress</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>CaptureNameAndAddress</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3796</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>703</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>CaptureCustomerAddress</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.UserLocale">
<core:interfaceName>com.enactor.core.localisation.ILocale</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>user.locale</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:targetDataType name="CaptureAddressPromptMessageBase">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:targetDataType name="CaptureNamePromptMessageBase">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:targetDataType name="NotCaptureAddress">
<core:interfaceName>java.lang.Boolean</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:targetDataType name="NotCaptureName">
<core:interfaceName>java.lang.Boolean</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CaptureCustomerAddress</core:toActionID>
            <core:condition>!process.giftCardTenderItem.isRefund &amp;&amp; process.tender.captureNameAndAddressForTender</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>Authorise</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>AuthorisationComplete</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4639</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>703</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:messageState>
        <core:url>/Error/Error</core:url>
        <core:stateID>AuthorisationError</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4200</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>55</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessFail</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>AUTHORISATION_ERROR</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:state>
        <core:url></core:url>
        <core:stateID>Cancel</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3687</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>70</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>GetGiftCardDetails</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>282</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>741</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>GetGiftCardDetails</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.CardTrack2">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.CardTrack2">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.GiftCardDetails">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>giftCardTenderItem.giftCardDetails</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Location">
<core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.Location">
<core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.GiftCardType">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.GiftCardType">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.PosTerminal">
<core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.PosTerminal">
<core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.GiftCardTypeKey">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.GiftCardTypeKey">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.CardNumberScanned">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.CardNumberScanned">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetGiftCardDetails</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:promptState>
        <core:url>Pos/GiftCard/AuthorisationDeclined</core:url>
        <core:stateID>NotAuthorised</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIPromptState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4540</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>189</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.pos.Outcome">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.pos.Outcome">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:comment>Authorisation Declined. Outcome may give the reason.</core:comment>
        <core:typeId>enactor.types.PromptState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:stateInputMappings>
            <core:mappings>
                <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType name="enactor.pos.Outcome">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:targetDataType>
                <core:expression>giftCardAuthorisationResponse.outcome</core:expression>
            </core:mappings>
            <core:mappings>
                <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:targetDataType>
            </core:mappings>
        </core:stateInputMappings>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>Cancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
    </core:promptState>
    <core:messageState>
        <core:url>/Error/Error</core:url>
        <core:stateID>WrongCardTypeTender</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1430</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>134</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:comment>The tender set on the card type record does not match the tender selected.
By the way, note that the Acquirer set on the card type record is not used.
</core:comment>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>WRONG_CARD_TYPE_FOR_TENDER</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:messageState>
        <core:url>/Error/Error</core:url>
        <core:stateID>InvalidAmount</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3630</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>857</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
        </core:metaData>
        <core:comment>Shouldn't get here</core:comment>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessFail</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>INVALID_CHANGE_AMOUNT</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:state>
        <core:url></core:url>
        <core:stateID>AuthoriseBalanceAmount</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>5241</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>703</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:comment>Reduce the requested tender amount to the card balance and perform a second online authorisation attempt.</core:comment>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>OnlineAuthorisation2</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>OnlineAuthorisation2</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.GiftCardTenderItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardTenderItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetBalanceAsAmount</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:promptState>
        <core:url>Pos/GiftCard/AmountLimited</core:url>
        <core:stateID>BalanceNotSufficient</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIPromptState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4942</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>521</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="cardBalance">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </core:input>
                <core:input required="true" name="cardCurrencyId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
                <handledEvent name="CancelPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="cardCurrencyId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="cardBalance">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:comment>The request was declined because the requested amount was greater than the balance. Allow the option of retrying with the balance as the tender amount.</core:comment>
        <core:typeId>enactor.types.PromptState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:stateInputMappings>
            <core:mappings>
                <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType required="true" name="cardBalance">
                    <core:interfaceName>java.lang.Long</core:interfaceName>
                </core:targetDataType>
                <core:expression>giftCardAuthorisationResponse.balance</core:expression>
            </core:mappings>
            <core:mappings>
                <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType required="true" name="cardCurrencyId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:targetDataType>
                <core:expression>giftCardAuthorisationResponse.cardCurrencyId</core:expression>
            </core:mappings>
        </core:stateInputMappings>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>Cancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>AuthoriseBalanceAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
    </core:promptState>
    <core:messageState>
        <core:url></core:url>
        <core:stateID>NotActive</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2563</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>822</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>NOT_AUTHORISED_NOT_ACTIVE</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:state>
        <core:url></core:url>
        <core:stateID>LoadAcquirer</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1635</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>794</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IGiftCardAcquirer</core:interfaceName>
                </core:output>
            </core:outputs>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IGiftCardAcquirer</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>LoadAcquirer</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.GiftCardType">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.Key">
<core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>giftCardType.acquirerKey</core:expression>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
            <core:actionMapping>
                <core:actionID>GetAmountEntryPrompt</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.GiftCardType">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.GiftCardType">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.UserLocale">
<core:interfaceName>java.util.Locale</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>user.locale</core:expression>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>LoadAcquirer</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.Entity">
<core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.Entity">
<core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IGiftCardAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
            <core:actionMapping>
                <core:actionID>GetAmountEntryPrompt</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.Message">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="MessageText">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LoadAcquirer</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestRefundToNewCard2</core:toActionID>
            <core:condition>empty(process.giftCardType.acquirerKey)</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>LoadTender</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>751</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>741</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes/>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>LoadTender</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardCardType">
<core:interfaceName>com.enactor.mfc.cardType.IGiftCardCardType</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.TenderKey">
<core:interfaceName>com.enactor.mfc.tender.ITenderKey</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>(notEmpty(giftCardCardType) &amp;&amp; notEmpty(giftCardCardType.tenderKey)) ? giftCardCardType.tenderKey : 
 (notEmpty(giftCardType.tenderKey)) ? giftCardType.tenderKey : null</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Location">
<core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.GroupKey">
<core:interfaceName>com.enactor.core.group.IGroupKey</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>location.regionGroupKey</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TenderId">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.TenderId">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
            <core:actionMapping>
                <core:actionID>LoadTenderCurrency</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Tender">
<core:interfaceName>com.enactor.mfc.tender.ITender</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.Key">
<core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>tender.currencyKey</core:expression>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.coreUI.EndpointReference">
<core:interfaceName>com.enactor.core.webService.epr.IServiceEndpointReference</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>LoadTenderCurrency</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.Entity">
<core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TenderCurrency">
<core:interfaceName>com.enactor.mfc.currency.ICurrency</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LoadTender</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LoadTenderCurrency</core:toActionID>
            <core:condition>notEmpty(process.tender)</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:messageState>
        <core:url></core:url>
        <core:stateID>NoAccount</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2321</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>231</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>NOT_AUTHORISED_NO_ACCOUNT</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:messageState>
        <core:url>/Message/ModalOKCancel</core:url>
        <core:stateID>ShowBalance</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2409</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>421</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
                <handledEvent name="CancelPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardBalanceResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardBalanceResponse</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetAmount</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:closeOnNextPrompt>false</core:closeOnNextPrompt>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>GIFT_CARD_BALANCE</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:stateTransitions/>
</core:process>
