<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<core:process xmlns:core="http://www.enactor.com/core" xmlns:retail="http://www.enactor.com/retail" xmlns:ns4="http://www.enactor.com/crm" xmlns:hta="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803" xmlns:ns6="http://www.apis-it.hr/fin/2012/types/f73" xmlns:ns7="http://www.w3.org/2000/09/xmldsig#" xmlns:ns8="http://www.enactor.com/retail/storedRetailTransaction/service" xmlns:ns9="http://www.fu.gov.si/" xmlns:ns10="http://www.enactor.com/addressLookup/service" xmlns:htd="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/200803" xmlns:htt="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803" xmlns:sref="http://docs.oasis-open.org/wsbpel/2.0/serviceref" xmlns:ns14="http://www.enactor.com/crm/customerLoyalty/service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <core:processID>Pos/GiftCard/GiftCardReceiptReturn</core:processID>
    <core:version>1.0</core:version>
    <core:name></core:name>
    <core:defaultMessageBaseName></core:defaultMessageBaseName>
    <core:firstStateID>Start</core:firstStateID>
    <core:className></core:className>
    <core:uiHints>
        <entry>
            <key>com.enactor.tools.editor.process.style</key>
            <value>127</value>
        </entry>
        <entry>
            <key>com.enactor.tools.editor.process.xloc</key>
            <value>21</value>
        </entry>
        <entry>
            <key>com.enactor.tools.editor.process.yloc</key>
            <value>28</value>
        </entry>
    </core:uiHints>
    <core:metaData>
        <core:inputs>
            <core:input name="Cashdrawer">
                <core:interfaceName>com.enactor.coreUI.peripherals.cashdrawer.ICashdrawer</core:interfaceName>
            </core:input>
            <core:input name="enactor.coreUI.User">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.mfc.GiftCardItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.GiftCardProduct">
                <core:interfaceName>com.enactor.mfc.product.IGiftCardProduct</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.Location">
                <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.PosTerminal">
                <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.Reason">
                <core:interfaceName>com.enactor.mfc.reason.IReason</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.mfc.TransactionHandler">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.EmbeddedCardNumber">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.OriginalItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.ProductCodeScanned">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
        </core:inputs>
        <core:outputs>
            <core:output required="true" name="enactor.mfc.GiftCardItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
            </core:output>
        </core:outputs>
        <stateDataTypes>
            <stateDataType name="Cashdrawer">
                <core:interfaceName>com.enactor.coreUI.peripherals.cashdrawer.ICashdrawer</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.coreUI.AuthorisingUser">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.coreUI.User">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.Acquirer">
                <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.GiftCardDetails">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.GiftCardItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.GiftCardProduct">
                <core:interfaceName>com.enactor.mfc.product.IGiftCardProduct</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.GiftCardType">
                <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.Location">
                <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.PosTerminal">
                <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.Reason">
                <core:interfaceName>com.enactor.mfc.reason.IReason</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.TransactionHandler">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.CardNumberKeyed">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.CardNumberScanned">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.EmbeddedCardNumber">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.OriginalItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.ProductCodeScanned">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
        </stateDataTypes>
    </core:metaData>
    <core:comment>Return a gift card as receipt return item. If original Item is not supplied then performs return without receipt.</core:comment>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessFail</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>512</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>22</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Fail</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessCancel</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1708</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>36</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Cancel</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessSuccess</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4432</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>34</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Success</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LoadAcquirer</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.commonUI.entities.processes.LoadEntityAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>127</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2019</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>344</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.Key">
                    <core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.coreUI.Entity">
                    <core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                </core:output>
                <core:output name="enactor.coreUI.Key">
                    <core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>OverrideAcquirerCredentials</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>InitialiseGiftCardDetails</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>127</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1408</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>322</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Sets properties on the gift card basket item.
TODO more to do here...</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>InitialiseGiftCardItem</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>CancelNotAllowed</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>!process.giftCardType.allowReturn</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardDetails.giftCardTypeId" fromExpression="giftCardType.giftCardTypeId"/>
        <core:dataAssignment toExpression="giftCardDetails.acquirerKey" fromExpression="giftCardType.acquirerKey"/>
        <core:dataAssignment toExpression="giftCardDetails.cancelledCard" fromExpression="true"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>InitialiseGiftCardItem</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>127</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1731</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>314</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.coreUI.User">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Location">
                    <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.PosTerminal">
                    <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.Reason">
                    <core:interfaceName>com.enactor.mfc.reason.IReason</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.OriginalItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Sets properties on the gift card basket item.
TODO more to do here...</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>LoadAcquirer</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>NotOriginalCard</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>notEmpty(process.originalItem)
 &amp;&amp; (notEmpty(process.originalItem.giftCardDetails.cardDetails.PAN) || notEmpty(process.originalItem.giftCardDetails.accountId))
 &amp;&amp; (process.giftCardDetails.cardDetails.PAN != process.originalItem.giftCardDetails.cardDetails.PAN) 
 &amp;&amp; (process.giftCardDetails.cardDetails.PAN != process.originalItem.giftCardDetails.accountId)</core:condition>
            <core:comment>If original details are available ensure card number matches wither original PAN or account id.</core:comment>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardItem.description" fromExpression="giftCardType.description"/>
        <core:dataAssignment toExpression="giftCardItem.deviceId" fromExpression="posTerminal.deviceId"/>
        <core:dataAssignment toExpression="giftCardItem.userId" fromExpression="user.userId"/>
        <core:dataAssignment toExpression="giftCardItem.quantity" fromExpression="1.0"/>
        <core:dataAssignment toExpression="giftCardItem.dateTimeCreated" fromExpression="dates:getNow()"/>
        <core:dataAssignment toExpression="giftCardItem.reasonKey" fromExpression="notEmpty(reason) ? reason.key : null"/>
        <core:dataAssignment toExpression="giftCardItem.isReturn" fromExpression="true"/>
        <core:dataAssignment toExpression="giftCardItem.notVoidable" fromExpression="true"/>
        <core:dataAssignment toExpression="giftCardItem.preventsTransactionVoid" fromExpression="true"/>
        <core:dataAssignment toExpression="giftCardItem.preventsPostTransactionVoid" fromExpression="true"/>
        <core:dataAssignment toExpression="giftCardItem.value" fromExpression="notEmpty(originalItem) ? originalItem.value : 0"/>
        <core:dataAssignment toExpression="giftCardItem.unitPrice" fromExpression="giftCardItem.value"/>
    </core:assignAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>OnlineAuthorisation</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2436</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>274</value>
            </entry>
        </core:uiHints>
        <core:param value="#{enumValue('com.enactor.cardAuthorisation.messages.AuthorisationActionType','UPDATE')}" name="enactor.cardAuthorisation.AuthorisationActionType">
            <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.AuthorisationActionType">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="ReferralRequested"/>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Declined"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>The value will be got from the authorisation response so this must succeed.</core:comment>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestPreviousBalanceSet</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>AuthorisationError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>4</core:linkID>
            <core:toStateID>NotAuthorised</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Declined</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>5</core:linkID>
            <core:toStateID>NotAuthorised</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>ReferralRequested</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>6</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetDefaultValue</core:toActionID>
            <core:condition>process.giftCardType.allowReturnOffline</core:condition>
            <core:comment>Allow return offline. Should never be allowed with an externally hosted gift card.</core:comment>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GiftCardAuthorisation</core:executeProcessId>
    </core:executeProcessAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetGiftCardDetails</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1118</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>442</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment></core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>InitialiseGiftCardDetails</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardItem.giftCardDetails" fromExpression="giftCardDetails"/>
    </core:assignAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>GetGiftCardDetails</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>833</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>237</value>
            </entry>
        </core:uiHints>
        <core:param value="SWIPE_RETURNED_CARD" name="enactor.coreUI.MessageId">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:param>
        <core:param value="false" name="enactor.pos.AllowAlreadyUsed">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.MessageBasename">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.MessageId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.User">
                    <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.GiftCardTypeKey">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.Location">
                    <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.PosTerminal">
                    <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.AllowAlreadyUsed">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardNumberScanned">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardTrack2">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardNumberKeyed">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Cancel"/>
                <core:outcome name="Success"/>
                <core:outcome name="Fail"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetGiftCardDetails</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessFail</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GetGiftCardDetails</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>ValidateAmount</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>5015</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>269</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetValueQty</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>AmountTooLarge</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>process.giftCardType.maximumValue != 0 &amp;&amp; (process.giftCardItem.value) &gt; process.giftCardType.maximumValue</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogException</core:actionID>
        <core:name>UILogMessageAction</core:name>
        <core:className>com.enactor.coreUI.actions.UILogMessageAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>311</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>171</value>
            </entry>
        </core:uiHints>
        <core:param value="Failed to issue gift card." name="enactor.coreUI.LogMessage">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.LogMessage">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>ProcessError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>ProcessError</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetBalanceValue</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3866</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>303</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Set the value from the authorisation response.</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>ConfirmCancelCard</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardItem.unitPrice" fromExpression="giftCardAuthorisationResponse.previousBalance"/>
        <core:dataAssignment toExpression="giftCardItem.value" fromExpression="giftCardAuthorisationResponse.previousBalance"/>
        <core:dataAssignment toExpression="giftCardItem.quantity" fromExpression="-1"/>
        <core:dataAssignment toExpression="giftCardItem.netQuantity" fromExpression="-1"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetDefaultValue</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4792</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>187</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.OriginalItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Could no go online to cancel the gift card.  Set the default value to return from the original item if available.</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>EnterBalance</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardItem.value" fromExpression="notEmpty(originalItem) ? originalItem.value : 0"/>
    </core:assignAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>ReverseGiftCardOnlineAuth</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3166</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>167</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Fail"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>Reverses the authorisation and adds the item and a voided item pair to the basket.</core:comment>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GiftCardTenderCancelled</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CreateGiftCardTypeKey</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.CreateFactoryKeyObjectAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>590</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>601</value>
            </entry>
        </core:uiHints>
        <core:param value="http://www.enactor.com/retail" name="enactor.coreUI.EntityNamespace">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:param>
        <core:param value="giftCardType" name="enactor.coreUI.EntityName">
            <core:interfaceName>java.lang.String</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.coreUI.EntityName">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.EntityNamespace">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.coreUI.Key">
                    <core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetGiftCardTypeId</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetGiftCardTypeId</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>590</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>502</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardTypeKey">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.OriginalItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardTypeKey">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetGiftCardDetails</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardTypeKey.giftCardTypeId" fromExpression="originalItem.giftCardDetails.giftCardTypeId"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetValueQty</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>5015</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>99</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Set the value negative for a return.</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardItem.unitPrice" fromExpression="giftCardItem.value"/>
        <core:dataAssignment toExpression="giftCardItem.value" fromExpression="giftCardItem.value"/>
        <core:dataAssignment toExpression="giftCardItem.quantity" fromExpression="-1"/>
        <core:dataAssignment toExpression="giftCardItem.netQuantity" fromExpression="-1"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetProductGiftCardTypeKey</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>590</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>393</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardProduct">
                    <core:interfaceName>com.enactor.mfc.product.IGiftCardProduct</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardTypeKey">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetGiftCardDetails</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardTypeKey" fromExpression="giftCardProduct.giftCardTypeKey"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetCardNumber</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>343</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>565</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.EmbeddedCardNumber">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.ProductCodeScanned">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.pos.CardNumberKeyed">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.pos.CardNumberScanned">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>Set keyed or scanned card number from embedded card number.</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetGiftCardDetails</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="cardNumberScanned" fromExpression="notEmpty(productCodeScanned) ? embeddedCardNumber : null"/>
        <core:dataAssignment toExpression="cardNumberKeyed" fromExpression="enactor:empty(productCodeScanned) ? embeddedCardNumber : null"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetOriginalItemValue</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3869</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>612</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.OriginalItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Set the value from the original item.</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>ConfirmCancelCard</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="giftCardItem.unitPrice" fromExpression="originalItem.value"/>
        <core:dataAssignment toExpression="giftCardItem.value" fromExpression="originalItem.value"/>
        <core:dataAssignment toExpression="giftCardItem.quantity" fromExpression="-1"/>
        <core:dataAssignment toExpression="giftCardItem.netQuantity" fromExpression="-1"/>
    </core:assignAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestPreviousBalanceSet</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3578</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>619</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestPreviousBalanceMatches</core:toActionID>
            <core:condition>process.giftCardAuthorisationResponse.previousBalance != 0</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetOriginalItemValue</core:toActionID>
            <core:condition>process.giftCardAuthorisationResponse.previousBalance == 0 &amp;&amp; notEmpty(process.originalItem)</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetDefaultValue</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestPreviousBalanceMatches</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3578</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>526</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>BalanceDifferentWarning</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>notEmpty(process.originalItem) &amp;&amp; process.giftCardAuthorisationResponse.previousBalance != process.originalItem.value</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetBalanceValue</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>OverrideAcquirerCredentials</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2220</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>343</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.Location">
                    <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>Authorise</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/GiftCard/GiftCardRetrieveAccountCredentials</core:executeProcessId>
    </core:executeProcessAction>
    <core:eventLink>
        <core:linkID>1</core:linkID>
        <core:toStateID></core:toStateID>
        <core:toActionID>LogException</core:toActionID>
        <core:condition></core:condition>
        <core:event>Exception</core:event>
    </core:eventLink>
    <core:messageState>
        <core:url>/Error/Error</core:url>
        <core:stateID>ProcessError</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIErrorState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>313</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>97</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>ExceptionMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessFail</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>GENERAL_ERROR</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:state>
        <core:url></core:url>
        <core:stateID>LoadAcquirer</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1952</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>690</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>LoadAcquirer</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.GiftCardType">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.Key">
<core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>giftCardType.acquirerKey</core:expression>
                        </core:mappings>
                    </core:processMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>LoadAcquirer</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.Entity">
<core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.Key">
<core:interfaceName>com.enactor.core.entities.IEntityKey</core:interfaceName>
                            </core:sourceDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LoadAcquirer</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>Authorise</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>empty(process.giftCardType.acquirerKey)</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>Authorise</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2436</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>690</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>OnlineAuthorisation</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>OnlineAuthorisation</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.GiftCardItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationRequest">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>OnlineAuthorisation</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetDefaultValue</core:toActionID>
            <core:condition>empty(process.acquirer)</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>GetGiftCardDetails</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>310</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>393</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.mfc.GiftCardTypeKey">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>GetGiftCardDetails</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.GiftCardDetails">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>giftCardItem.giftCardDetails</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.Location">
<core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.Location">
<core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.User">
<core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.PosTerminal">
<core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.PosTerminal">
<core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.pos.CardNumberKeyed">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.CardNumberKeyed">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.pos.CardNumberScanned">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.pos.CardNumberScanned">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.coreUI.MessageBasename">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.pos.CardTrack2">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:targetDataType name="enactor.mfc.GiftCardType">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardTypeKey">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.GiftCardTypeKey">
<core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardTypeKey</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:stateMappings>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CreateGiftCardTypeKey</core:toActionID>
            <core:condition>isEmpty(process.giftCardProduct) &amp;&amp; notEmpty(process.originalItem)</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetProductGiftCardTypeKey</core:toActionID>
            <core:condition>notEmpty(process.giftCardProduct)</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetGiftCardDetails</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:promptState>
        <core:url>Pos/GiftCard/AuthorisationDeclined</core:url>
        <core:stateID>NotAuthorised</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIPromptState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2796</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>161</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.pos.Outcome">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.pos.Outcome">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
                <stateDataType name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:comment>Authorisation Declined. Outcome may give the reason.</core:comment>
        <core:typeId>enactor.types.PromptState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:stateInputMappings>
            <core:mappings>
                <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType name="enactor.pos.Outcome">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:targetDataType>
                <core:expression>giftCardAuthorisationResponse.outcome</core:expression>
            </core:mappings>
            <core:mappings>
                <core:sourceDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:targetDataType>
            </core:mappings>
        </core:stateInputMappings>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
    </core:promptState>
    <core:messageState>
        <core:url>/Error/Error</core:url>
        <core:stateID>CancelNotAllowed</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1241</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>219</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>CANCEL_NOT_ALLOWED</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:messageState>
        <core:url></core:url>
        <core:stateID>AuthorisationError</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2220</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>36</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="OKPressed"/>
                <handledEvent name="CancelPressed"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.MessageState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>AUTHORISATION_CANCEL_ERROR</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:messageState>
        <core:url>/Error/Error</core:url>
        <core:stateID>AmountTooLarge</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>5015</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>428</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>EnterBalance</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>AMOUNT_TOO_LARGE</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:promptState>
        <core:url>Pos/GiftCard/EnterGiftCardCancelledAmount</core:url>
        <core:stateID>EnterBalance</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIPromptState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>127</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4792</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>314</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.CurrencyId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
                <handledEvent name="CancelPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.mfc.CurrencyId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>enactor.types.PromptState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:stateInputMappings>
            <core:mappings>
                <core:sourceDataType required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:targetDataType>
            </core:mappings>
            <core:mappings>
                <core:sourceDataType required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType required="true" name="enactor.mfc.GiftCardDetails">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardDetails</core:interfaceName>
                </core:targetDataType>
            </core:mappings>
            <core:mappings>
                <core:sourceDataType name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:sourceDataType>
                <core:targetDataType required="true" name="enactor.mfc.CurrencyId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:targetDataType>
                <core:expression>notEmpty(giftCardType.currencyId) ? giftCardType.currencyId : transactionHandler.transaction.basket.currencyId</core:expression>
            </core:mappings>
        </core:stateInputMappings>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>ValidateAmount</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>CancelPostAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:comment>Skip reverse of authorisation - we are only here because online authorisation failed.</core:comment>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
    </core:promptState>
    <core:messageState>
        <core:url></core:url>
        <core:stateID>NotOriginalCard</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1526</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>217</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.OriginalItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.pos.OriginalItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetGiftCardDetails</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>CANCEL_NOT_ORIGINAL_CARD</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:messageState>
        <core:url></core:url>
        <core:stateID>BalanceDifferentWarning</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3578</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>305</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.OriginalItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
                <handledEvent name="CancelPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.pos.OriginalItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>enactor.types.MessageState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetBalanceValue</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>CancelPostAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>GIFT_CARD_CANCELLED_BALANCE_DIFFERENT</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:state>
        <core:url></core:url>
        <core:stateID>CancelPostAuthorisation</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3168</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>461</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>ReverseGiftCardOnlineAuth</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.GiftCardItem">
<core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>ReverseGiftCardOnlineAuth</core:toActionID>
            <core:condition>process.giftCardItem.giftCardDetails.authorisedOnline</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:messageState>
        <core:url>/Message/ModalOKCancel</core:url>
        <core:stateID>ConfirmCancelCard</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4160</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>416</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
                <handledEvent name="CancelPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.mfc.GiftCardType">
                    <core:interfaceName>com.enactor.mfc.giftCardType.IGiftCardType</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.mfc.GiftCardItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IGiftCardItem</core:interfaceName>
                </stateDataType>
                <stateDataType required="true" name="enactor.cardAuthorisation.messages.GiftCardAuthorisationResponse">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationResponse</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>ErrorMessage</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>ConfirmCancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>CONFIRM_GIFT_CARD_CANCELLED_AMOUNT</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:messageState>
        <core:url>/Message/ModalYesNo</core:url>
        <core:stateID>ConfirmCancel</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIMessageState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>5</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4406</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>563</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="CancelPressed"/>
                <handledEvent name="OKPressed"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.MessageState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>ConfirmCancelCard</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>CancelPostAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/GiftCard/GiftCardMessages</core:messageBase>
        <core:messageId>CONFIRM_CANCEL</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:state>
        <core:url></core:url>
        <core:stateID>Start</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>87</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>694</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetGiftCardDetails</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetCardNumber</core:toActionID>
            <core:condition>notEmpty(process.embeddedCardNumber)</core:condition>
            <core:comment>Disabled this because the embedded card number is probably only applicable for a Valuelink gift card, but the chances are it wouldn't work for a Valuelink card anyway because the embedded card number in the product code is not the same as the track2 card number and it's likely they require the track2 number anyway.</core:comment>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:stateTransitions/>
</core:process>
