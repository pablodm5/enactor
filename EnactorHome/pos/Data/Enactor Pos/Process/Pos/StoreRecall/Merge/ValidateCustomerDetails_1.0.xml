<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<core:process xmlns:core="http://www.enactor.com/core" xmlns:retail="http://www.enactor.com/retail" xmlns:ns4="http://www.enactor.com/crm" xmlns:hta="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803" xmlns:ns6="http://www.apis-it.hr/fin/2012/types/f73" xmlns:ns7="http://www.w3.org/2000/09/xmldsig#" xmlns:ns8="http://www.enactor.com/retail/storedRetailTransaction/service" xmlns:ns9="http://www.fu.gov.si/" xmlns:ns10="http://www.enactor.com/addressLookup/service" xmlns:htd="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/200803" xmlns:htt="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803" xmlns:sref="http://docs.oasis-open.org/wsbpel/2.0/serviceref" xmlns:ns14="http://www.enactor.com/crm/customerLoyalty/service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <core:processID>Pos/StoreRecall/Merge/ValidateCustomerDetails</core:processID>
    <core:version>1.0</core:version>
    <core:name>Recall Transaction</core:name>
    <core:defaultMessageBaseName></core:defaultMessageBaseName>
    <core:firstStateID>Start</core:firstStateID>
    <core:className></core:className>
    <core:uiHints>
        <entry>
            <key>com.enactor.tools.editor.process.style</key>
            <value>127</value>
        </entry>
        <entry>
            <key>com.enactor.tools.editor.process.xloc</key>
            <value>8</value>
        </entry>
        <entry>
            <key>com.enactor.tools.editor.process.yloc</key>
            <value>8</value>
        </entry>
    </core:uiHints>
    <core:metaData>
        <core:inputs>
            <core:input required="true" name="enactor.coreUI.User">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.mfc.Location">
                <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.mfc.SourceTransaction">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.mfc.TargetTransaction">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
            </core:input>
        </core:inputs>
        <core:outputs>
            <core:output required="true" name="enactor.mfc.TargetTransaction">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
            </core:output>
        </core:outputs>
        <stateDataTypes>
            <stateDataType required="true" name="enactor.coreUI.User">
                <core:interfaceName>com.enactor.core.signOn.ISignedOnUser</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.Location">
                <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.TargetTransaction">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.SourceTransaction">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.TargetCustomerDetails">
                <core:interfaceName>com.enactor.mfc.retail.model.ICustomerRetailDetails</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.SourceCustomerDetails">
                <core:interfaceName>com.enactor.mfc.retail.model.ICustomerRetailDetails</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.Different">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
        </stateDataTypes>
    </core:metaData>
    <core:typeId>GenericAction</core:typeId>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessFail</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>452</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>12</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>EndProcessFail</core:typeId>
        <core:outcome>Fail</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessSuccess</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>970</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>12</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>EndProcessSuccess</core:typeId>
        <core:outcome>Success</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>EndProcessCancel</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>714</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>12</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>EndProcessFail</core:typeId>
        <core:outcome>Cancel</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>ExtractCustomerDetails</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>361</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>394</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.CurrentRetailSale">
                    <core:interfaceName>com.enactor.mfc.retail.model.IRetailSaleData</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.RecalledRetailSale">
                    <core:interfaceName>com.enactor.mfc.retail.model.IRetailSaleData</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.TargetCustomerDetails">
                    <core:interfaceName>com.enactor.mfc.retail.model.ICustomerRetailDetails</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.mfc.SourceCustomerDetails">
                    <core:interfaceName>com.enactor.mfc.retail.model.ICustomerRetailDetails</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestConflict</core:toActionID>
            <core:condition>notEmpty(process.targetCustomerDetails) &amp;&amp; notEmpty(process.sourceCustomerDetails)</core:condition>
            <core:comment>If either is not present then no conflict</core:comment>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="targetCustomerDetails" fromExpression="currentRetailSale.customerRetailDetails"/>
        <core:dataAssignment toExpression="sourceCustomerDetails" fromExpression="recalledRetailSale.customerRetailDetails"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestConflict</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>731</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>384</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.TargetCustomerDetails">
                    <core:interfaceName>com.enactor.mfc.retail.model.ICustomerRetailDetails</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.SourceCustomerDetails">
                    <core:interfaceName>com.enactor.mfc.retail.model.ICustomerRetailDetails</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.Different">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.pos.Different">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>CustomerDetailsDiffer</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>process.different</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="different" fromExpression="false"/>
        <core:dataAssignment toExpression="different" fromExpression="different   || (notEmpty(targetCustomerDetails.customerName.forename) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.forename) &amp;&amp; targetCustomerDetails.customerName.forename != sourceCustomerDetails.customerName.forename)  || (notEmpty(targetCustomerDetails.customerName.dateOfBirth) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.dateOfBirth) &amp;&amp; targetCustomerDetails.customerName.dateOfBirth != sourceCustomerDetails.customerName.dateOfBirth)  || (notEmpty(targetCustomerDetails.customerName.initials) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.initials) &amp;&amp; targetCustomerDetails.customerName.initials != sourceCustomerDetails.customerName.initials)  || (notEmpty(targetCustomerDetails.customerName.jobTitle) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.jobTitle) &amp;&amp; targetCustomerDetails.customerName.jobTitle != sourceCustomerDetails.customerName.jobTitle)  || (notEmpty(targetCustomerDetails.customerName.initials) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.initials) &amp;&amp; targetCustomerDetails.customerName.initials != sourceCustomerDetails.customerName.initials)  || (notEmpty(targetCustomerDetails.customerName.otherNames) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.otherNames) &amp;&amp; targetCustomerDetails.customerName.otherNames != sourceCustomerDetails.customerName.otherNames)  || (notEmpty(targetCustomerDetails.customerName.sex) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.sex) &amp;&amp; targetCustomerDetails.customerName.sex != sourceCustomerDetails.customerName.sex)  || (notEmpty(targetCustomerDetails.customerName.surname) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.surname) &amp;&amp; targetCustomerDetails.customerName.surname != sourceCustomerDetails.customerName.surname)  || (notEmpty(targetCustomerDetails.customerName.title) &amp;&amp; notEmpty(sourceCustomerDetails.customerName.title) &amp;&amp; targetCustomerDetails.customerName.title != sourceCustomerDetails.customerName.title) "/>
        <core:dataAssignment toExpression="different" fromExpression=" different   || (notEmpty(targetCustomerDetails.customerAddress.email) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.email) &amp;&amp; targetCustomerDetails.customerAddress.email != sourceCustomerDetails.customerAddress.email)  || (notEmpty(targetCustomerDetails.customerAddress.fax) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.fax) &amp;&amp; targetCustomerDetails.customerAddress.fax != sourceCustomerDetails.customerAddress.fax)  || (notEmpty(targetCustomerDetails.customerAddress.mobilePhone) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.mobilePhone) &amp;&amp; targetCustomerDetails.customerAddress.mobilePhone != sourceCustomerDetails.customerAddress.mobilePhone)  || (notEmpty(targetCustomerDetails.customerAddress.mobilePhoneCallingCode) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.mobilePhoneCallingCode) &amp;&amp; targetCustomerDetails.customerAddress.mobilePhoneCallingCode != sourceCustomerDetails.customerAddress.mobilePhoneCallingCode)  || (notEmpty(targetCustomerDetails.customerAddress.phone1) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.phone1) &amp;&amp; targetCustomerDetails.customerAddress.phone1 != sourceCustomerDetails.customerAddress.phone1)  || (notEmpty(targetCustomerDetails.customerAddress.phone1CallingCode) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.phone1CallingCode) &amp;&amp; targetCustomerDetails.customerAddress.phone1CallingCode != sourceCustomerDetails.customerAddress.phone1CallingCode)  || (notEmpty(targetCustomerDetails.customerAddress.phone2) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.phone2) &amp;&amp; targetCustomerDetails.customerAddress.phone2 != sourceCustomerDetails.customerAddress.phone2)  || (notEmpty(targetCustomerDetails.customerAddress.phone2CallingCode) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.phone2CallingCode) &amp;&amp; targetCustomerDetails.customerAddress.phone2CallingCode != sourceCustomerDetails.customerAddress.phone2CallingCode)  || (notEmpty(targetCustomerDetails.customerAddress.country) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.country) &amp;&amp; targetCustomerDetails.customerAddress.country != sourceCustomerDetails.customerAddress.country)  || (notEmpty(targetCustomerDetails.customerAddress.countryCode) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.countryCode) &amp;&amp; targetCustomerDetails.customerAddress.countryCode != sourceCustomerDetails.customerAddress.countryCode)  || (notEmpty(targetCustomerDetails.customerAddress.county) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.county) &amp;&amp; targetCustomerDetails.customerAddress.county != sourceCustomerDetails.customerAddress.county)  || (notEmpty(targetCustomerDetails.customerAddress.postCode) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.postCode) &amp;&amp; targetCustomerDetails.customerAddress.postCode != sourceCustomerDetails.customerAddress.postCode)  || (notEmpty(targetCustomerDetails.customerAddress.street1) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.street1) &amp;&amp; targetCustomerDetails.customerAddress.street1 != sourceCustomerDetails.customerAddress.street1)  || (notEmpty(targetCustomerDetails.customerAddress.street2) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.street2) &amp;&amp; targetCustomerDetails.customerAddress.street2 != sourceCustomerDetails.customerAddress.street2)  || (notEmpty(targetCustomerDetails.customerAddress.street3) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.street3) &amp;&amp; targetCustomerDetails.customerAddress.street3 != sourceCustomerDetails.customerAddress.street3)  || (notEmpty(targetCustomerDetails.customerAddress.town) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.town) &amp;&amp; targetCustomerDetails.customerAddress.town != sourceCustomerDetails.customerAddress.town)  || (notEmpty(targetCustomerDetails.customerAddress.type) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.type) &amp;&amp; targetCustomerDetails.customerAddress.type != sourceCustomerDetails.customerAddress.type)  || (notEmpty(targetCustomerDetails.customerAddress.status) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.status) &amp;&amp; targetCustomerDetails.customerAddress.status != sourceCustomerDetails.customerAddress.status)  || (notEmpty(targetCustomerDetails.customerAddress.organisation) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.organisation) &amp;&amp; targetCustomerDetails.customerAddress.organisation != sourceCustomerDetails.customerAddress.organisation)  || (notEmpty(targetCustomerDetails.customerAddress.validFrom) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.validFrom) &amp;&amp; targetCustomerDetails.customerAddress.validFrom != sourceCustomerDetails.customerAddress.validFrom)  || (notEmpty(targetCustomerDetails.customerAddress.validTo) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.validTo) &amp;&amp; targetCustomerDetails.customerAddress.validTo != sourceCustomerDetails.customerAddress.validTo)  || (notEmpty(targetCustomerDetails.customerAddress.isPreferred) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.isPreferred) &amp;&amp; targetCustomerDetails.customerAddress.isPreferred != sourceCustomerDetails.customerAddress.isPreferred)  || (notEmpty(targetCustomerDetails.customerAddress.restrictedReason) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.restrictedReason) &amp;&amp; targetCustomerDetails.customerAddress.restrictedReason != sourceCustomerDetails.customerAddress.restrictedReason)  || (notEmpty(targetCustomerDetails.customerAddress.referenceId) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.referenceId) &amp;&amp; targetCustomerDetails.customerAddress.referenceId != sourceCustomerDetails.customerAddress.referenceId)  || (notEmpty(targetCustomerDetails.customerAddress.addressReferenceId) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.addressReferenceId) &amp;&amp; targetCustomerDetails.customerAddress.addressReferenceId != sourceCustomerDetails.customerAddress.addressReferenceId)  || (notEmpty(targetCustomerDetails.customerAddress.province) &amp;&amp; notEmpty(sourceCustomerDetails.customerAddress.province) &amp;&amp; targetCustomerDetails.customerAddress.province != sourceCustomerDetails.customerAddress.province) "/>
        <core:dataAssignment toExpression="different" fromExpression=" different  || (notEmpty(targetCustomerDetails.customerNumber) &amp;&amp; notEmpty(sourceCustomerDetails.customerNumber) &amp;&amp; targetCustomerDetails.customerNumber != sourceCustomerDetails.customerNumber)  || (notEmpty(targetCustomerDetails.customerCardEntryMethod) &amp;&amp; notEmpty(sourceCustomerDetails.customerCardEntryMethod) &amp;&amp; targetCustomerDetails.customerCardEntryMethod != sourceCustomerDetails.customerCardEntryMethod)  || (notEmpty(targetCustomerDetails.customerPan) &amp;&amp; notEmpty(sourceCustomerDetails.customerPan) &amp;&amp; targetCustomerDetails.customerPan != sourceCustomerDetails.customerPan)  || (notEmpty(targetCustomerDetails.proofOfIdentityType) &amp;&amp; notEmpty(sourceCustomerDetails.proofOfIdentityType) &amp;&amp; targetCustomerDetails.proofOfIdentityType != sourceCustomerDetails.proofOfIdentityType)  || (notEmpty(targetCustomerDetails.proofOfIdentityId) &amp;&amp; notEmpty(sourceCustomerDetails.proofOfIdentityId) &amp;&amp; targetCustomerDetails.proofOfIdentityId != sourceCustomerDetails.proofOfIdentityId)  || (notEmpty(targetCustomerDetails.proofOfIdentityIssuingCountry) &amp;&amp; notEmpty(sourceCustomerDetails.proofOfIdentityIssuingCountry) &amp;&amp; targetCustomerDetails.proofOfIdentityIssuingCountry != sourceCustomerDetails.proofOfIdentityIssuingCountry)  || (notEmpty(targetCustomerDetails.proofOfIdentityIssuingCountryCode) &amp;&amp; notEmpty(sourceCustomerDetails.proofOfIdentityIssuingCountryCode) &amp;&amp; targetCustomerDetails.proofOfIdentityIssuingCountryCode != sourceCustomerDetails.proofOfIdentityIssuingCountryCode)  || (notEmpty(targetCustomerDetails.proofOfIdentityExpieryDate) &amp;&amp; notEmpty(sourceCustomerDetails.proofOfIdentityExpieryDate) &amp;&amp; targetCustomerDetails.proofOfIdentityExpieryDate != sourceCustomerDetails.proofOfIdentityExpieryDate)  || (notEmpty(targetCustomerDetails.proofOfIdentityIssueDate) &amp;&amp; notEmpty(sourceCustomerDetails.proofOfIdentityIssueDate) &amp;&amp; targetCustomerDetails.proofOfIdentityIssueDate != sourceCustomerDetails.proofOfIdentityIssueDate) "/>
        <core:dataAssignment toExpression="different" fromExpression=" different  || (notEmpty(targetCustomerDetails.loyaltyAccountNumber) &amp;&amp; notEmpty(sourceCustomerDetails.loyaltyAccountNumber) &amp;&amp; targetCustomerDetails.loyaltyAccountNumber != sourceCustomerDetails.loyaltyAccountNumber)  || (notEmpty(targetCustomerDetails.loyaltySchemeId) &amp;&amp; notEmpty(sourceCustomerDetails.loyaltySchemeId) &amp;&amp; targetCustomerDetails.loyaltySchemeId != sourceCustomerDetails.loyaltySchemeId)  || (notEmpty(targetCustomerDetails.preferredCollectionTime) &amp;&amp; notEmpty(sourceCustomerDetails.preferredCollectionTime) &amp;&amp; targetCustomerDetails.preferredCollectionTime != sourceCustomerDetails.preferredCollectionTime)  || (notEmpty(targetCustomerDetails.preferredDeliveryTime) &amp;&amp; notEmpty(sourceCustomerDetails.preferredDeliveryTime) &amp;&amp; targetCustomerDetails.preferredDeliveryTime != sourceCustomerDetails.preferredDeliveryTime)  || (notEmpty(targetCustomerDetails.preferredStoreId) &amp;&amp; notEmpty(sourceCustomerDetails.preferredStoreId) &amp;&amp; targetCustomerDetails.preferredStoreId != sourceCustomerDetails.preferredStoreId)  || (notEmpty(targetCustomerDetails.preferredContactTypeKey) &amp;&amp; notEmpty(sourceCustomerDetails.preferredContactTypeKey) &amp;&amp; targetCustomerDetails.preferredContactTypeKey != sourceCustomerDetails.preferredContactTypeKey)  || (notEmpty(targetCustomerDetails.organisation) &amp;&amp; notEmpty(sourceCustomerDetails.organisation) &amp;&amp; targetCustomerDetails.organisation != sourceCustomerDetails.organisation)  || (notEmpty(targetCustomerDetails.deliveryOrganisation) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryOrganisation) &amp;&amp; targetCustomerDetails.deliveryOrganisation != sourceCustomerDetails.deliveryOrganisation) "/>
        <core:dataAssignment toExpression="different" fromExpression="different  || (notEmpty(targetCustomerDetails.deliveryName.forename) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.forename) &amp;&amp; targetCustomerDetails.deliveryName.forename != sourceCustomerDetails.deliveryName.forename)  || (notEmpty(targetCustomerDetails.deliveryName.dateOfBirth) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.dateOfBirth) &amp;&amp; targetCustomerDetails.deliveryName.dateOfBirth != sourceCustomerDetails.deliveryName.dateOfBirth)  || (notEmpty(targetCustomerDetails.deliveryName.initials) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.initials) &amp;&amp; targetCustomerDetails.deliveryName.initials != sourceCustomerDetails.deliveryName.initials)  || (notEmpty(targetCustomerDetails.deliveryName.jobTitle) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.jobTitle) &amp;&amp; targetCustomerDetails.deliveryName.jobTitle != sourceCustomerDetails.deliveryName.jobTitle)  || (notEmpty(targetCustomerDetails.deliveryName.initials) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.initials) &amp;&amp; targetCustomerDetails.deliveryName.initials != sourceCustomerDetails.deliveryName.initials)  || (notEmpty(targetCustomerDetails.deliveryName.otherNames) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.otherNames) &amp;&amp; targetCustomerDetails.deliveryName.otherNames != sourceCustomerDetails.deliveryName.otherNames)  || (notEmpty(targetCustomerDetails.deliveryName.sex) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.sex) &amp;&amp; targetCustomerDetails.deliveryName.sex != sourceCustomerDetails.deliveryName.sex)  || (notEmpty(targetCustomerDetails.deliveryName.surname) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.surname) &amp;&amp; targetCustomerDetails.deliveryName.surname != sourceCustomerDetails.deliveryName.surname)  || (notEmpty(targetCustomerDetails.deliveryName.title) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryName.title) &amp;&amp; targetCustomerDetails.deliveryName.title != sourceCustomerDetails.deliveryName.title) "/>
        <core:dataAssignment toExpression="different" fromExpression=" different  || (notEmpty(targetCustomerDetails.deliveryAddress.country) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.country) &amp;&amp; targetCustomerDetails.deliveryAddress.country != sourceCustomerDetails.deliveryAddress.country)  || (notEmpty(targetCustomerDetails.deliveryAddress.countryCode) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.countryCode) &amp;&amp; targetCustomerDetails.deliveryAddress.countryCode != sourceCustomerDetails.deliveryAddress.countryCode)  || (notEmpty(targetCustomerDetails.deliveryAddress.county) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.county) &amp;&amp; targetCustomerDetails.deliveryAddress.county != sourceCustomerDetails.deliveryAddress.county)  || (notEmpty(targetCustomerDetails.deliveryAddress.postCode) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.postCode) &amp;&amp; targetCustomerDetails.deliveryAddress.postCode != sourceCustomerDetails.deliveryAddress.postCode)  || (notEmpty(targetCustomerDetails.deliveryAddress.street1) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.street1) &amp;&amp; targetCustomerDetails.deliveryAddress.street1 != sourceCustomerDetails.deliveryAddress.street1)  || (notEmpty(targetCustomerDetails.deliveryAddress.street2) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.street2) &amp;&amp; targetCustomerDetails.deliveryAddress.street2 != sourceCustomerDetails.deliveryAddress.street2)  || (notEmpty(targetCustomerDetails.deliveryAddress.street3) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.street3) &amp;&amp; targetCustomerDetails.deliveryAddress.street3 != sourceCustomerDetails.deliveryAddress.street3)  || (notEmpty(targetCustomerDetails.deliveryAddress.town) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.town) &amp;&amp; targetCustomerDetails.deliveryAddress.town != sourceCustomerDetails.deliveryAddress.town)  || (notEmpty(targetCustomerDetails.deliveryAddress.type) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.type) &amp;&amp; targetCustomerDetails.deliveryAddress.type != sourceCustomerDetails.deliveryAddress.type)  || (notEmpty(targetCustomerDetails.deliveryAddress.status) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.status) &amp;&amp; targetCustomerDetails.deliveryAddress.status != sourceCustomerDetails.deliveryAddress.status)  || (notEmpty(targetCustomerDetails.deliveryAddress.organisation) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.organisation) &amp;&amp; targetCustomerDetails.deliveryAddress.organisation != sourceCustomerDetails.deliveryAddress.organisation)  || (notEmpty(targetCustomerDetails.deliveryAddress.validFrom) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.validFrom) &amp;&amp; targetCustomerDetails.deliveryAddress.validFrom != sourceCustomerDetails.deliveryAddress.validFrom)  || (notEmpty(targetCustomerDetails.deliveryAddress.validTo) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.validTo) &amp;&amp; targetCustomerDetails.deliveryAddress.validTo != sourceCustomerDetails.deliveryAddress.validTo)  || (notEmpty(targetCustomerDetails.deliveryAddress.isPreferred) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.isPreferred) &amp;&amp; targetCustomerDetails.deliveryAddress.isPreferred != sourceCustomerDetails.deliveryAddress.isPreferred)  || (notEmpty(targetCustomerDetails.deliveryAddress.restrictedReason) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.restrictedReason) &amp;&amp; targetCustomerDetails.deliveryAddress.restrictedReason != sourceCustomerDetails.deliveryAddress.restrictedReason)  || (notEmpty(targetCustomerDetails.deliveryAddress.referenceId) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.referenceId) &amp;&amp; targetCustomerDetails.deliveryAddress.referenceId != sourceCustomerDetails.deliveryAddress.referenceId)  || (targetCustomerDetails.deliveryAddress.isActive != sourceCustomerDetails.deliveryAddress.isActive)  || (notEmpty(targetCustomerDetails.deliveryAddress.addressReferenceId) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.addressReferenceId) &amp;&amp; targetCustomerDetails.deliveryAddress.addressReferenceId != sourceCustomerDetails.deliveryAddress.addressReferenceId)  || (notEmpty(targetCustomerDetails.deliveryAddress.province) &amp;&amp; notEmpty(sourceCustomerDetails.deliveryAddress.province) &amp;&amp; targetCustomerDetails.deliveryAddress.province != sourceCustomerDetails.deliveryAddress.province) "/>
    </core:assignAction>
    <core:state>
        <core:url></core:url>
        <core:stateID>Start</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>12</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>396</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes/>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>ExtractCustomerDetails</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.TargetTransaction">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.CurrentRetailSale">
<core:interfaceName>com.enactor.mfc.retail.model.IRetailSaleData</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.SourceTransaction">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.RecalledRetailSale">
<core:interfaceName>com.enactor.mfc.retail.model.IRetailSaleData</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>ExtractCustomerDetails</core:toActionID>
            <core:condition>instanceOf(process.targetTransaction, 'com.enactor.mfc.retail.model.IRetailSaleData') &amp;&amp; instanceOf(process.sourceTransaction, 'com.enactor.mfc.retail.model.IRetailSaleData') </core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:messageState>
        <core:url>/Message/ModalContinueCancel</core:url>
        <core:stateID>CustomerDetailsDiffer</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIErrorState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>714</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>175</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.mfc.TargetTransaction">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.SourceTransaction">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="OKPressed"/>
                <handledEvent name="CancelPressed"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType name="enactor.mfc.TargetTransaction">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
                </stateDataType>
                <stateDataType name="enactor.mfc.SourceTransaction">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransaction</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>enactor.types.MessageState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:event>OKPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>EndProcessCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
        <core:messageBase>Pos/StoreRecall/StoreRecallMessages</core:messageBase>
        <core:messageId>MERGE_WARN_CUSTOMER_DETAILS_CONFLICT</core:messageId>
        <core:messageText></core:messageText>
    </core:messageState>
    <core:stateTransitions/>
</core:process>
