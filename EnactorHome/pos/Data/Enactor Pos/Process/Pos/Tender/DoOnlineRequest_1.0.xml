<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<core:process xmlns:core="http://www.enactor.com/core" xmlns:retail="http://www.enactor.com/retail" xmlns:ns4="http://www.enactor.com/crm" xmlns:hta="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803" xmlns:ns6="http://www.apis-it.hr/fin/2012/types/f73" xmlns:ns7="http://www.w3.org/2000/09/xmldsig#" xmlns:ns8="http://www.enactor.com/retail/storedRetailTransaction/service" xmlns:ns9="http://www.fu.gov.si/" xmlns:ns10="http://www.enactor.com/addressLookup/service" xmlns:htd="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/200803" xmlns:htt="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803" xmlns:sref="http://docs.oasis-open.org/wsbpel/2.0/serviceref" xmlns:ns14="http://www.enactor.com/crm/customerLoyalty/service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <core:processID>Pos/Tender/DoOnlineRequest</core:processID>
    <core:version>1.0</core:version>
    <core:name>Do Online Authorisation</core:name>
    <core:defaultMessageBaseName></core:defaultMessageBaseName>
    <core:firstStateID>Start</core:firstStateID>
    <core:className></core:className>
    <core:uiHints>
        <entry>
            <key>com.enactor.tools.editor.process.style</key>
            <value>127</value>
        </entry>
        <entry>
            <key>com.enactor.tools.editor.process.xloc</key>
            <value>8</value>
        </entry>
        <entry>
            <key>com.enactor.tools.editor.process.yloc</key>
            <value>12</value>
        </entry>
    </core:uiHints>
    <core:metaData>
        <core:inputs>
            <core:input name="enactor.mfc.BasketItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
            </core:input>
            <core:input name="MessageBase">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input name="enactor.cardAuthorisation.AuthRequestMessage">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.PosTerminal">
                <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
            </core:input>
            <core:input name="enactor.cardAuthorisation.AuthorisationActionType">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
            </core:input>
            <core:input name="enactor.mfc.Location">
                <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.pos.OnlineServicesStatusList">
                <core:interfaceName>com.enactor.mfc.tender.online.IOnlineServicesStatusList</core:interfaceName>
            </core:input>
            <core:input required="false" name="enactor.mfc.TransactionHandler">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
            </core:input>
            <core:input name="enactor.coreUI.Entity">
                <core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.ForceOnline">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.BuildAuthRequestProcessId">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input name="MessageId">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.mfc.Acquirer">
                <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.EnableAutomaticReversal">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.NoEncryptor">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </core:input>
            <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
            </core:input>
            <core:input name="enactor.pos.OriginalServiceId">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </core:input>
            <core:input name="enactor.cardAuthorisation.AuthorisationMessage">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
            </core:input>
        </core:inputs>
        <core:outputs>
            <core:output required="true" name="enactor.pos.CardAuthServersStatus">
                <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
            </core:output>
            <core:output required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
            </core:output>
        </core:outputs>
        <stateDataTypes>
            <stateDataType required="false" name="enactor.coreUI.QueueReader">
                <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.BuildAuthRequestProcessId">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType required="false" name="enactor.mfc.TransactionHandler">
                <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.EnableAutomaticReversal">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.Location">
                <core:interfaceName>com.enactor.mfc.location.ILocation</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.coreUI.Entity">
                <core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.OriginalServiceId">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.cardAuthorisation.AuthorisationMessage">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.CardAuthServersStatus">
                <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
            </stateDataType>
            <stateDataType required="false" name="enactor.coreUI.QueueWriter">
                <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.Acquirer">
                <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.NoEncryptor">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.DoAutomaticReversal">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.OnlineServicesStatusList">
                <core:interfaceName>com.enactor.mfc.tender.online.IOnlineServicesStatusList</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.BasketItem">
                <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
            </stateDataType>
            <stateDataType name="MessageId">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.AcquirerService">
                <core:interfaceName>com.enactor.cardPayment.processes.card.IAcquirerService</core:interfaceName>
            </stateDataType>
            <stateDataType name="MessageBase">
                <core:interfaceName>java.lang.String</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.cardAuthorisation.AuthRequestMessage">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.AttemptedServices">
                <core:interfaceName>java.util.List</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.cardAuthorisation.AuthorisationActionType">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.pos.ForceOnline">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
            <stateDataType name="enactor.mfc.PosTerminal">
                <core:interfaceName>com.enactor.mfc.posTerminal.IPOSTerminal</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.AllOutOfService">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.MessageEncryptor">
                <core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.pos.KeyAttempts">
                <core:interfaceName>java.lang.Integer</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.mfc.acquirer.CommsAddress">
                <core:interfaceName>com.enactor.mfc.acquirer.ICommsAddress</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.core.ResponseHoldMessage">
                <core:interfaceName>com.enactor.core.message.IResponseHoldMessage</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.core.ResponseRetryMessage">
                <core:interfaceName>com.enactor.core.message.IResponseRetryMessage</core:interfaceName>
            </stateDataType>
            <stateDataType required="true" name="enactor.cardAuthorisation.IsRetry">
                <core:interfaceName>java.lang.Boolean</core:interfaceName>
            </stateDataType>
        </stateDataTypes>
    </core:metaData>
    <core:comment>Generic online request process. 

An AuthorisationRequest can be supplied or alternatively takes the ProcessId of a process which will be called both to create the authorisation request or to modify it for a retry.  
This 'Build Request' process is called with the supplied Acquirer, the transaction handler, the basket item being populated, an optional message encryptor, an optional authorisation action type and a further optional unspecified entity, typically containing a type record associated with the request.

DoOnlineRequest is responsible for performing retries according to the retry parameters defined on the Acquirer record. The 'Build request' process can return FAIL to indicate a further retry is not allowed.

Response parsing is limited to the first validation of a response. This process does not perform Apacs30 checks as such, except that it will respond to Apacs30 'hold' messages.

The process establishes if requests are to be encrypted from the endpoint configuration.  If so it will attempt to obtain the server's encryption key if required and store it for later reuse. 

A MessageBase parameter may be supplied to alter the message displayed while awaiting authorisation.</core:comment>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>End Process Success</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2697</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>36</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Success</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>End Process Fail</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2333</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>28</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Fail</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SendAuthorisationMessage</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.SendAuthorisationMessage</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2502</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>727</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AuthorisationMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>IncrementMessageNumber</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogException</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>DoOnlineAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>notEmpty(process.isRetry) &amp;&amp; process.isRetry</core:condition>
            <core:comment>Don't increment messge number on sending retries</core:comment>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>ProcessAuthorisationResponse</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.ProcessAuthorisationResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>127</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3587</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>731</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.coreUI.QueueReader">
                    <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.acquirer.CommsAddress">
                    <core:interfaceName>com.enactor.mfc.acquirer.ICommsAddress</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:output>
                <core:output name="enactor.core.ResponseHoldMessage">
                    <core:interfaceName>com.enactor.core.message.IResponseHoldMessage</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
                <core:outcome name="AuthorisationError"/>
                <core:outcome name="AuthorisationErrorRetry"/>
                <core:outcome name="AuthorisationHold"/>
                <core:outcome name="AuthorisationTimeout"/>
                <core:outcome name="AuthorisationKeyInvalid"/>
                <core:outcome name="AuthorisationDataReceivedError"/>
                <core:outcome name="ResponseHold"/>
                <core:outcome name="*"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>5</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogException</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>4</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseHold</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>AuthorisationHold</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseError</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>AuthorisationError</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseErrorRetry</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>AuthorisationErrorRetry</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>6</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseInvalidKey</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>AuthorisationKeyInvalid</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>9</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestResponse</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>ResponseHold</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>7</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseErrorRetry</core:toActionID>
            <core:condition>(process.acquirerService.commsAddress.requestTimeout &gt; 0 )
&amp;&amp; (now().time &gt; (process.cardAuthRequestResponseMessage.timeRequestCreated + (process.acquirerService.commsAddress.requestTimeout * 1000)))</core:condition>
            <core:comment>Check timeout against the selected acquirer comms address record.</core:comment>
            <core:outcome>ResponseHold</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>8</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseErrorRetry</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>AuthorisationTimeout</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>10</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseErrorRetry</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>AuthorisationDataReceivedError</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>11</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseErrorRetry</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>*</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CloseQueueSuccess</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.queues.actions.CloseQueueReaderWriterAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>47</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2697</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>131</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.QueueReader">
                    <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>End Process Success</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>End Process Success</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>GetHoldAuthorisationQueues</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>127</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4595</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>620</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.coreUI.EndpointReference">
                    <core:interfaceName>com.enactor.core.processConnections.IEndpointReference</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.QueueReadTimeout">
                    <core:interfaceName>java.lang.Integer</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="false" name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:output>
                <core:output required="false" name="enactor.coreUI.QueueReader">
                    <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Fail"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>HoldOnlineCardAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>CardPayment/Authorisation/GetAuthorisationQueues</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestAuthServersStatus</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.card.TestCardAuthServersStatus</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>597</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>615</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.OriginalServiceId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.ForceOnline">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:output>
                <core:output name="enactor.pos.AcquirerService">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.IAcquirerService</core:interfaceName>
                </core:output>
                <core:output name="enactor.pos.AllOutOfService">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
                <core:outcome name="Fail"/>
                <core:outcome name="AllOutOfService"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>MakeOutOfServiceResponse</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>AllOutOfService</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>5</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>End Process Fail</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetQueue</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:endProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>End Process Cancel</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIEndProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3067</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>42</value>
            </entry>
        </core:uiHints>
        <core:metaData/>
        <core:typeId>enactor.types.EndProcess</core:typeId>
        <core:outcome>Cancel</core:outcome>
        <core:defaultProcessId></core:defaultProcessId>
    </core:endProcessAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>BuildRequest</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1889</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>463</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.AuthRequestMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AuthorisationActionType">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.Entity">
                    <core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.ExecuteProcessId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.MessageEncryptor">
                    <core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AuthorisationMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.cardAuthorisation.AuthRequestMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.cardAuthorisation.AuthorisationMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
                <core:outcome name="Fail"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>Call out to supplied ProcessId to create or modify the Authorisation Request Message.  The called process must output an Authorisation Request Message.  Input parameters are optional and their meaning depends on the callled process.
*** Now we accept either an IAuthorisationRequest or an IAuthorisationMessage ***</core:comment>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>DoOnlineAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogException</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId></core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogAuthorisationRequest</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.LogAuthorisationRequest</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>11</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2502</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>985</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AuthRequestMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AuthorisationMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SendAuthorisationMessage</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SendAuthorisationSimpleMessage</core:toActionID>
            <core:condition>process.authRequestMessage == null &amp;&amp; process.authorisationMessage != null</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogAuthResponseErrorRetry</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.LogAuthorisationResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3254</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1090</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetIsRetry</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogAuthResponseSuccess</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.LogAuthorisationResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3247</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>841</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>UpdateServersStatusSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogAuthResponseError</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.LogAuthorisationResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3420</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>492</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogAuthResponseHold</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.LogAuthorisationResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4074</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>851</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>HoldReceived</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>InitialiseCardAuthServersStatus</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>224</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>415</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.pos.OnlineServicesStatusList">
                    <core:interfaceName>com.enactor.mfc.tender.online.IOnlineServicesStatusList</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CheckForceOfflineExpiry</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>CardPayment/Authorisation/InitialiseCardAuthServersStatus</core:executeProcessId>
    </core:executeProcessAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetIsRetry</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1962</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1031</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outputs>
                <core:output required="true" name="enactor.cardAuthorisation.IsRetry">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>CheckRetryAllowable</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="isRetry" fromExpression="true"/>
    </core:assignAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>IncrementMessageNumber</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.IncrementEftMessageNumber</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>959</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2336</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>481</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
                <core:outcome name="Fail"/>
            </core:outcomes>
            <core:sessionManagementType>MAKE_SESSION_IF_NO_CURRENT</core:sessionManagementType>
        </core:metaData>
        <core:comment>Increment Eft Message Number, once request is successfully sent to host (and not for retries).
TODO Should probably only do this when response is successfully received.</core:comment>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>DoOnlineAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>DoOnlineAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CloseQueueFail</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.queues.actions.CloseQueueReaderWriterAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>47</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2333</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>123</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.QueueReader">
                    <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>End Process Fail</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>End Process Fail</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CloseQueueCancel</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.queues.actions.CloseQueueReaderWriterAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>47</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3066</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>137</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.QueueReader">
                    <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>End Process Cancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>End Process Cancel</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>GetPrimaryEncryptor</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1094</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>224</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.coreUI.EndpointReference">
                    <core:interfaceName>com.enactor.core.processConnections.IEndpointReference</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.QueueReader">
                    <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.cardAuthorisation.MessageEncryptor">
                    <core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.cardAuthorisation.MessageEncryptor">
                    <core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Cancel"/>
                <core:outcome name="Fail"/>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetEncryptor</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>EndProcessCancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Cancel</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/Tender/GetAuthorisationEncryptionKey</core:executeProcessId>
    </core:executeProcessAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>IncKeyAttempts</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1996</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>200</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.KeyAttempts">
                    <core:interfaceName>java.lang.Integer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.pos.KeyAttempts">
                    <core:interfaceName>java.lang.Integer</core:interfaceName>
                </core:output>
                <core:output required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>Request failed with invalid key. Increment key attempts and retry if allowed.</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>NullRequestResponseMessage</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>process.keyAttempts &gt; 1</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="keyAttempts" fromExpression="keyAttempts + 1"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>InitKeyAttempts1</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>598</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>388</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outputs>
                <core:output required="true" name="enactor.pos.KeyAttempts">
                    <core:interfaceName>java.lang.Integer</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetAuthorisationQueue</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="keyAttempts" fromExpression="0"/>
    </core:assignAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>UpdateServersStatusSuccess</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.card.UpdateServersStatusSuccess</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3245</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>589</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Update on success to mark services as back in service, as we could have decided to use one even if out of service.</core:comment>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>EndProcessSuccess</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>UpdateServersStatusFail</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.card.UpdateServersStatus</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>63</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1371</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>811</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AttemptedServices">
                    <core:interfaceName>java.util.List</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:output>
                <core:output name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:output>
                <core:output name="enactor.cardAuthorisation.AttemptedServices">
                    <core:interfaceName>java.util.List</core:interfaceName>
                </core:output>
                <core:output name="enactor.pos.AcquirerService">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.IAcquirerService</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Failover"/>
                <core:outcome name="CardAuthRetry"/>
                <core:outcome name="Error"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Note on the output we update the original AuthRerquestMessage with the one returned by the server so that we can retain an assigned TID if any.</core:comment>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Error</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>GetQueue</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Failover</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>PrepareRequest</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>CardAuthRetry</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogAuthResponseInvalidKey</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.LogAuthorisationResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2992</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>771</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>IncKeyAttempts</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>NullRequestResponseMessage</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIClearValuesAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1645</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>119</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Clear the request response message as this is not to be considered a retry of the original request.</core:comment>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>NullEncryptor</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SendResponseRetryMessage</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.mfc.tender.online.actions.SendResponseRetryMessage</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3615</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1097</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.core.ResponseHoldMessage">
                    <core:interfaceName>com.enactor.core.message.IResponseHoldMessage</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.core.ResponseRetryMessage">
                    <core:interfaceName>com.enactor.core.message.IResponseRetryMessage</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>DoOnlineAuthorisation:ShowCancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:comment>ResponseHold message will move us to the state with Cancel option.  Will occur after 10 seconds.</core:comment>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>WaitBeforeResponseRetry</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIWaitAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3831</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1095</value>
            </entry>
        </core:uiHints>
        <core:param value="3" name="enactor.coreUI.WaitTimeSecs">
            <core:interfaceName>java.lang.Integer</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.WaitTimeSecs">
                    <core:interfaceName>java.lang.Integer</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SendResponseRetryMessage</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestResponse</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3830</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>997</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>WaitBeforeResponseRetry</core:toActionID>
            <core:condition>process.responseHoldMessage.currentHoldSize &gt; 3</core:condition>
            <core:comment>If the server has more than 3 response queues held, so is presumably  busy, we will wait for a short time before retrying.</core:comment>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SendResponseRetryMessage</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogException</core:actionID>
        <core:name>UILogMessageAction</core:name>
        <core:className>com.enactor.coreUI.actions.UILogMessageAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2331</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>383</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>MakeOutOfServiceResponse</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.card.MakeOutOfServiceResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>458</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>76</value>
            </entry>
        </core:uiHints>
        <core:param value="true" name="enactor.pos.ForceOffline">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.pos.ForceOffline">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseOutOfService</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogAuthResponseOutOfService</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.LogAuthorisationResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>716</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>76</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>End Process Fail</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CheckForceOfflineExpiry</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>224</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>76</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestAuthServersStatus</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>MakeOutOfServiceResponse</core:toActionID>
            <core:condition>process.cardAuthServersStatus.forceOffline &amp;&amp; (isEmpty(process.forceOnline) || !process.forceOnline)</core:condition>
            <core:comment>Force Online takes precedence over Force Offline!</core:comment>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>CardPayment/Authorisation/CheckForceOfflineExpiryTime</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>LogAuthResponseCancelled</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.LogAuthorisationResponse</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3420</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>325</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>EndProcessCancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>CallAutomaticTimeoutReversal</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4595</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>179</value>
            </entry>
        </core:uiHints>
        <core:param value="#{enumValue('com.enactor.cardAuthorisation.messages.AuthorisationActionType','REVERSE')}" name="enactor.cardAuthorisation.AuthorisationActionType">
            <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.cardAuthorisation.MessageEncryptor">
                    <core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.acquirer.CommsAddress">
                    <core:interfaceName>com.enactor.mfc.acquirer.ICommsAddress</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.QueueReader">
                    <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.BuildAuthRequestProcessId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AuthorisationActionType">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.TransactionHandler">
                    <core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                </core:input>
                <core:input name="enactor.coreUI.Entity">
                    <core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                </core:input>
                <core:input name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.BasketItem">
                    <core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
                <core:outcome name="Fail"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseCancelled</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseCancelled</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>Pos/Tender/AutomaticTimeoutReversal</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestRequest</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UINullAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4216</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>455</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.NullAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CallAutomaticTimeoutReversal</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestGiftCardRequest</core:toActionID>
            <core:condition> instanceOf(process.cardAuthRequestResponseMessage.request, 'com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest')</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseCancelled</core:toActionID>
            <core:condition> instanceOf(process.cardAuthRequestResponseMessage.request, 'com.enactor.cardAuthorisation.messages.giftCard.IGiftCardRequest')
 &amp;&amp; ! instanceOf(process.cardAuthRequestResponseMessage.request, 'com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest')</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>TestGiftCardRequest</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4216</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>183</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.cardAuthorisation.GiftCardAuthorisationRequest">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.pos.DoAutomaticReversal">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseCancelled</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CallAutomaticTimeoutReversal</core:toActionID>
            <core:condition>process.doAutomaticReversal</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="doAutomaticReversal" fromExpression="enumEquals(giftCardAuthorisationRequest.actionType, 'UPDATE')"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetEncryptor</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1364</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>249</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.cardAuthorisation.MessageEncryptor">
                    <core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>PrepareRequest</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="cardAuthServersStatus.usedServiceStatus.messageEncryptor" fromExpression="messageEncryptor"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>NullEncryptor</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1300</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>119</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetEncryptor</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="cardAuthServersStatus.usedServiceStatus.messageEncryptor" fromExpression="null"/>
    </core:assignAction>
    <core:assignAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SetCommsAddress</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UIAssignAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>598</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>453</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.AcquirerService">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.IAcquirerService</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="true" name="enactor.mfc.acquirer.CommsAddress">
                    <core:interfaceName>com.enactor.mfc.acquirer.ICommsAddress</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
        </core:metaData>
        <core:comment>We only do this because some of the processes later need it and the mappings get messy</core:comment>
        <core:typeId>enactor.types.Assign</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>InitKeyAttempts1</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:dataAssignment toExpression="commsAddress" fromExpression="acquirerService.commsAddress"/>
    </core:assignAction>
    <core:executeProcessAction>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>GetAuthorisationQueue</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.actions.UICallProcessAction</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>833</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>249</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.coreUI.EndpointReference">
                    <core:interfaceName>com.enactor.core.processConnections.IEndpointReference</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.coreUI.QueueReadTimeout">
                    <core:interfaceName>java.lang.Integer</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output required="false" name="enactor.coreUI.QueueReader">
                    <core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                </core:output>
                <core:output required="false" name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
                <core:outcome name="Fail"/>
            </core:outcomes>
        </core:metaData>
        <core:typeId>enactor.types.CallProcess</core:typeId>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>CheckRetryAllowable</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Fail</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>GetEncryptor</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>PrepareRequest</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition>process.noEncryptor != null &amp;&amp; process.noEncryptor</core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:executeProcessId>CardPayment/Authorisation/GetAuthorisationQueues</core:executeProcessId>
    </core:executeProcessAction>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>SendAuthorisationSimpleMessage</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.online.SendAuthorisationMessage</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>27</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2502</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1204</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input name="enactor.coreUI.QueueWriter">
                    <core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AuthorisationMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Success"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>DoOnlineAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Success</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogException</core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Exception</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:action>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:actionID>UpdatetatusFail:DataRequest</core:actionID>
        <core:name></core:name>
        <core:className>com.enactor.cardPayment.processes.card.UpdateServersStatus</core:className>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>63</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1056</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>849</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <core:inputs>
                <core:input required="true" name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:input>
                <core:input required="true" name="enactor.mfc.Acquirer">
                    <core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                </core:input>
                <core:input name="enactor.cardAuthorisation.AttemptedServices">
                    <core:interfaceName>java.util.List</core:interfaceName>
                </core:input>
            </core:inputs>
            <core:outputs>
                <core:output name="enactor.pos.CardAuthServersStatus">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                </core:output>
                <core:output name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
                    <core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                </core:output>
                <core:output name="enactor.cardAuthorisation.AttemptedServices">
                    <core:interfaceName>java.util.List</core:interfaceName>
                </core:output>
                <core:output name="enactor.pos.AcquirerService">
                    <core:interfaceName>com.enactor.cardPayment.processes.card.IAcquirerService</core:interfaceName>
                </core:output>
            </core:outputs>
            <core:outcomes>
                <core:outcome name="Failover"/>
                <core:outcome name="CardAuthRetry"/>
                <core:outcome name="Error"/>
            </core:outcomes>
            <core:sessionManagementType>NONE</core:sessionManagementType>
        </core:metaData>
        <core:comment>Note on the output we update the original AuthRerquestMessage with the one returned by the server so that we can retain an assigned TID if any.</core:comment>
        <core:typeId>enactor.types.BasicAction</core:typeId>
        <core:outcomeLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>PrepareRequest</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>CardAuthRetry</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>EndProcessFail</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Error</core:outcome>
        </core:outcomeLink>
        <core:outcomeLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>GetQueue</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:outcome>Failover</core:outcome>
        </core:outcomeLink>
    </core:action>
    <core:state>
        <core:url></core:url>
        <core:stateID>CheckRetryAllowable</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1673</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>1031</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes/>
        </core:metaData>
        <core:comment>For now we always try to do a retry, but in facrt we really need to examine what happened in more depath and pass the response back tot he calling process becuase retry might not be allowable for some request types, especially if the requets has been sent to the externak host.</core:comment>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>UpdateServersStatusFail</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.AcquirerService">
<core:interfaceName>com.enactor.cardPayment.processes.card.IAcquirerService</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.pos.AcquirerService">
<core:interfaceName>com.enactor.cardPayment.processes.card.IAcquirerService</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.cardAuthorisation.AttemptedServices">
<core:interfaceName>java.util.List</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.AttemptedServices">
<core:interfaceName>java.util.List</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.AuthRequestMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>cardAuthRequestResponseMessage.request</core:expression>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>UpdateServersStatusFail</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>UpdatetatusFail:DataRequest</core:toActionID>
            <core:condition>! instanceOf(process.cardAuthRequestResponseMessage.request, 'com.enactor.cardAuthorisation.messages.IAuthorisationRequest')</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>EndProcessFail</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2333</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>311</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CloseQueueFail</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>EndProcessSuccess</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2697</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>315</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CloseQueueSuccess</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>HoldReceived</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4123</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>928</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes/>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>GetHoldAuthorisationQueues</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.EndpointReference">
<core:interfaceName>com.enactor.core.processConnections.IEndpointReference</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>cardAuthServersStatus.usedServiceEndpoint</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.QueueReadTimeout">
<core:interfaceName>java.lang.Integer</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>cardAuthServersStatus.usedService.commsAddress.requestHoldTimeout</core:expression>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetHoldAuthorisationQueues</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>Start</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>224</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>705</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="true" name="enactor.pos.ForceOffline">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>InitialiseCardAuthServersStatus</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:promptState>
        <core:url>Pos/Tender/GetOnlineCardAuthorisation</core:url>
        <core:stateID>DoOnlineAuthorisation</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIPromptState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2219</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>727</value>
            </entry>
        </core:uiHints>
        <core:param value="false" name="enactor.pos.ShowCancelButton">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="MessageBase">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="MessageId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.ShowCancelButton">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="enactor.coreUI.queueEvent.QueueData"/>
                <handledEvent name="StateEntered"/>
                <handledEvent name="CancelPressed"/>
                <handledEvent name="CardRemoved"/>
                <handledEvent name="PromptTimeout"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="false" name="enactor.coreUI.deviceEvent.ICCReaderStatus">
                    <core:interfaceName>com.enactor.coreUI.peripherals.IDeviceEvent</core:interfaceName>
                </stateDataType>
                <stateDataType name="MessageBase">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
                <stateDataType name="MessageId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
                <stateDataType name="enactor.pos.ShowCancelButton">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:comment>Prompt displayed while awaiting authorisation. Its timeout determines the maximum time to wait.</core:comment>
        <core:typeId>enactor.types.PromptState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>true</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>SendAuthorisationMessage</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="false" name="enactor.coreUI.QueueWriter">
<core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.QueueWriter">
<core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.cardAuthorisation.AuthRequestMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.AuthorisationMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>3</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthorisationRequest</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>DoOnlineAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>DoOnlineAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CardRemoved</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>5</core:linkID>
            <core:toStateID>DoOnlineAuthorisation:ShowCancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>PromptTimeout</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>4</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>ProcessAuthorisationResponse</core:toActionID>
            <core:condition></core:condition>
            <core:event>enactor.coreUI.queueEvent.QueueData</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>15</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
    </core:promptState>
    <core:promptState>
        <core:url>Pos/Tender/GetHoldOnlineCardAuthorisation</core:url>
        <core:stateID>HoldOnlineCardAuthorisation</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIPromptState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>63</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>4272</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>595</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="CancelPressed"/>
                <handledEvent name="CardRemoved"/>
                <handledEvent name="PromptTimeout"/>
                <handledEvent name="enactor.coreUI.queueEvent.QueueData"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType required="false" name="enactor.coreUI.deviceEvent.ICCReaderStatus">
                    <core:interfaceName>com.enactor.coreUI.peripherals.IDeviceEvent</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:typeId>enactor.types.PromptState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>true</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>ProcessAuthorisationResponse</core:toActionID>
            <core:condition></core:condition>
            <core:event>enactor.coreUI.queueEvent.QueueData</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>TestSendCancelMessage</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>4</core:linkID>
            <core:toStateID>HoldOnlineCardAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CardRemoved</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>5</core:linkID>
            <core:toStateID>TestSendCancelMessage</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>PromptTimeout</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>0</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
    </core:promptState>
    <core:state>
        <core:url></core:url>
        <core:stateID>EndProcessCancel</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3066</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>325</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>CloseQueueCancel</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>PrepareRequest</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1889</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>833</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:comment>Build authorisation request if necessary, or adjust authorisation request for retry.</core:comment>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>BuildRequest</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.cardAuthorisation.AuthorisationActionType">
<core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.AuthorisationActionType">
<core:interfaceName>com.enactor.cardAuthorisation.messages.AuthorisationActionType</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.MessageEncryptor">
<core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.MessageEncryptor">
<core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.pos.BuildAuthRequestProcessId">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.ExecuteProcessId">
<core:interfaceName>java.lang.String</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="false" name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.TransactionHandler">
<core:interfaceName>com.enactor.mfc.retail.transaction.IRetailTransactionHandler</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.coreUI.Entity">
<core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.coreUI.Entity">
<core:interfaceName>com.enactor.core.entities.IEntity</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.cardAuthorisation.AuthRequestMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.AuthRequestMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.cardAuthorisation.AuthorisationMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.AuthorisationMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings>
            <core:actionMapping>
                <core:actionID>BuildRequest</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.AuthRequestMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.AuthRequestMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationRequest</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.AuthorisationMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.cardAuthorisation.AuthorisationMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.IAuthorisationMessage</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionOutputMappings>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>DoOnlineAuthorisation</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>BuildRequest</core:toActionID>
            <core:condition>notEmpty(process.buildAuthRequestProcessId)</core:condition>
            <core:comment>If no request is supplied or this is a retry and a process id is availablem, call it to build or adjust the request for retry.</core:comment>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:promptState>
        <core:url>Pos/Tender/GetOnlineCardAuthorisation</core:url>
        <core:stateID>DoOnlineAuthorisation:ShowCancel</core:stateID>
        <core:name></core:name>
        <core:className>com.enactor.coreUI.states.UIPromptState</core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1023</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>2749</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>730</value>
            </entry>
        </core:uiHints>
        <core:param value="true" name="enactor.pos.ShowCancelButton">
            <core:interfaceName>java.lang.Boolean</core:interfaceName>
        </core:param>
        <core:metaData>
            <core:inputs>
                <core:input name="MessageBase">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="MessageId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </core:input>
                <core:input name="enactor.pos.ShowCancelButton">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </core:input>
            </core:inputs>
            <handledEvents>
                <handledEvent name="enactor.coreUI.queueEvent.QueueData"/>
                <handledEvent name="CancelPressed"/>
                <handledEvent name="CardRemoved"/>
                <handledEvent name="PromptTimeout"/>
            </handledEvents>
            <stateDataTypes>
                <stateDataType name="MessageBase">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
                <stateDataType required="false" name="enactor.coreUI.deviceEvent.ICCReaderStatus">
                    <core:interfaceName>com.enactor.coreUI.peripherals.IDeviceEvent</core:interfaceName>
                </stateDataType>
                <stateDataType name="MessageId">
                    <core:interfaceName>java.lang.String</core:interfaceName>
                </stateDataType>
                <stateDataType name="enactor.pos.ShowCancelButton">
                    <core:interfaceName>java.lang.Boolean</core:interfaceName>
                </stateDataType>
            </stateDataTypes>
        </core:metaData>
        <core:comment>Prompt displayed while awaiting authorisation. Its timeout determines the maximum time to wait.</core:comment>
        <core:typeId>enactor.types.PromptState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>true</core:respondToViewEvents>
        <core:actionInputMappings/>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID>DoOnlineAuthorisation:ShowCancel</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CardRemoved</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID>TestSendCancelMessage</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>CancelPressed</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>3</core:linkID>
            <core:toStateID>TestSendCancelMessage</core:toStateID>
            <core:toActionID></core:toActionID>
            <core:condition></core:condition>
            <core:event>PromptTimeout</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>4</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>ProcessAuthorisationResponse</core:toActionID>
            <core:condition></core:condition>
            <core:event>enactor.coreUI.queueEvent.QueueData</core:event>
        </core:eventLink>
        <core:keepPromptOpen>false</core:keepPromptOpen>
        <core:keepPreviousPromptOpen>false</core:keepPreviousPromptOpen>
        <core:promptTimeout>80</core:promptTimeout>
        <core:hideOpenPrompt>false</core:hideOpenPrompt>
        <core:allowDatabasePromptLookup>false</core:allowDatabasePromptLookup>
    </core:promptState>
    <core:state>
        <core:url></core:url>
        <core:stateID>TestSendCancelMessage</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>3922</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>455</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
            <stateDataTypes/>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>TestGiftCardRequest</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.cardAuthorisation.CardAuthRequestResponseMessage">
<core:interfaceName>com.enactor.cardAuthorisation.messages.ICardAuthRequestResponseMessage</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.GiftCardAuthorisationRequest">
<core:interfaceName>com.enactor.cardAuthorisation.messages.giftCard.IGiftCardAuthorisationRequest</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>cardAuthRequestResponseMessage.request</core:expression>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>LogAuthResponseCancelled</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
        <core:eventLink>
            <core:linkID>2</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>TestRequest</core:toActionID>
            <core:condition>process.enableAutomaticReversal != null &amp;&amp; process.enableAutomaticReversal &amp;&amp; instanceOf(process.cardAuthRequestResponseMessage.request, 'com.enactor.cardAuthorisation.messages.IAuthorisationRequest') &amp;&amp; enumEquals(process.authorisationActionType, 'UPDATE')</core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>GetEncryptor</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>1094</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>581</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>GetPrimaryEncryptor</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.CardAuthServersStatus</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.cardAuthorisation.MessageEncryptor">
<core:interfaceName>com.enactor.core.cryptography.IMessageEncryptor</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>cardAuthServersStatus.usedServiceStatus.messageEncryptor</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="false" name="enactor.coreUI.QueueWriter">
<core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.QueueWriter">
<core:interfaceName>com.enactor.core.queues.IQueueWriter</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType name="enactor.mfc.BasketItem">
<core:interfaceName>com.enactor.mfc.basket.items.IBasketItem</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.EndpointReference">
<core:interfaceName>com.enactor.core.processConnections.IEndpointReference</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>cardAuthServersStatus.usedServiceEndpoint</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IExternalAcquirer</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.mfc.Acquirer">
<core:interfaceName>com.enactor.mfc.acquirer.IAcquirer</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="false" name="enactor.coreUI.QueueReader">
<core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.QueueReader">
<core:interfaceName>com.enactor.core.queues.IQueueReader</core:interfaceName>
                            </core:targetDataType>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>GetPrimaryEncryptor</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:state>
        <core:url></core:url>
        <core:stateID>GetQueue</core:stateID>
        <core:name></core:name>
        <core:className></core:className>
        <core:defaultNextStateID></core:defaultNextStateID>
        <core:uiHints>
            <entry>
                <key>com.enactor.tools.editor.process.style</key>
                <value>1</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.xloc</key>
                <value>774</value>
            </entry>
            <entry>
                <key>com.enactor.tools.editor.process.yloc</key>
                <value>513</value>
            </entry>
        </core:uiHints>
        <core:metaData>
            <handledEvents>
                <handledEvent name="StateEntered"/>
            </handledEvents>
        </core:metaData>
        <core:typeId>enactor.types.BasicState</core:typeId>
        <core:singleInstance>false</core:singleInstance>
        <core:respondToViewEvents>false</core:respondToViewEvents>
        <core:actionInputMappings>
            <core:actionMapping>
                <core:actionID>GetAuthorisationQueue</core:actionID>
                <core:mappings>
                    <core:processMappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.pos.CardAuthServersStatus">
<core:interfaceName>com.enactor.cardPayment.processes.card.ICardAuthServersStatus</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.EndpointReference">
<core:interfaceName>com.enactor.core.processConnections.IEndpointReference</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>cardAuthServersStatus.usedServiceEndpoint</core:expression>
                        </core:mappings>
                        <core:mappings>
                            <core:sourceDataType required="true" name="enactor.pos.AcquirerService">
<core:interfaceName>com.enactor.cardPayment.processes.card.IAcquirerService</core:interfaceName>
                            </core:sourceDataType>
                            <core:targetDataType required="true" name="enactor.coreUI.QueueReadTimeout">
<core:interfaceName>java.lang.Integer</core:interfaceName>
                            </core:targetDataType>
                            <core:expression>acquirerService.commsAddress.requestTimeout</core:expression>
                        </core:mappings>
                    </core:processMappings>
                    <core:stateMappings/>
                </core:mappings>
            </core:actionMapping>
        </core:actionInputMappings>
        <core:actionOutputMappings/>
        <core:eventLink>
            <core:linkID>1</core:linkID>
            <core:toStateID></core:toStateID>
            <core:toActionID>SetCommsAddress</core:toActionID>
            <core:condition></core:condition>
            <core:event>StateEntered</core:event>
        </core:eventLink>
    </core:state>
    <core:stateTransitions/>
</core:process>
