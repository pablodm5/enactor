<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<core:messageResource xmlns:core="http://www.enactor.com/core" xmlns:retail="http://www.enactor.com/retail" xmlns:ns4="http://www.enactor.com/crm" xmlns:hta="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/api/200803" xmlns:ns6="http://www.apis-it.hr/fin/2012/types/f73" xmlns:ns7="http://www.w3.org/2000/09/xmldsig#" xmlns:ns8="http://www.enactor.com/retail/storedRetailTransaction/service" xmlns:ns9="http://www.fu.gov.si/" xmlns:ns10="http://www.enactor.com/addressLookup/service" xmlns:htd="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/200803" xmlns:htt="http://docs.oasis-open.org/ns/bpel4people/ws-humantask/types/200803" xmlns:sref="http://docs.oasis-open.org/wsbpel/2.0/serviceref" xmlns:ns14="http://www.enactor.com/crm/customerLoyalty/service" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <core:basename>Pos/Tender/StoredCardTenderMessages</core:basename>
    <core:localeKey></core:localeKey>
    <core:message key="CONTACT_NUMBER_LABEL">Contact Number</core:message>
    <core:message key="REGISTRATION_HEADER">Card Registration</core:message>
    <core:message key="NATIVE_CURRENCY_LABEL">Card Currency</core:message>
    <core:message key="CUSTOMER_NAME_LABEL">Customer Name</core:message>
    <core:message key="CARDHOLDER_NOT_PRESENT_MESSAGE">Please check the details with the customer and confirm</core:message>
    <core:message key="IS_NATIVE_CARD_CURRENCY_LABEL">Use DCC to pay in Card Currency?</core:message>
    <core:message key="DCC_ON_PAYMENT_LABEL">Prompt for DCC on Payment?</core:message>
    <core:message key="EMAIL_ADDRESS_LABEL">Email Address</core:message>
    <core:message key="STREET1">Street 1</core:message>
    <core:message key="YES_LABEL">Yes</core:message>
    <core:message key="NO_LABEL">NO</core:message>
    <core:message key="AMEND">Amend</core:message>
    <core:message key="CANCEL">Cancel</core:message>
    <core:message key="ACCEPT">Accept</core:message>
    <core:message key="BLANK_ROW"></core:message>
    <core:message key="STREET2">Street 2</core:message>
    <core:message key="STREET3">Street 3</core:message>
    <core:message key="TOWN">Town</core:message>
    <core:message key="COUNTY">County</core:message>
    <core:message key="PROVINCE">Province</core:message>
    <core:message key="COUNTRY">Country</core:message>
    <core:message key="POSTCODE">PostCode</core:message>
    <core:message key="CARD_SCHEME_NAME_LABEL">Card Scheme Name</core:message>
    <core:message key="CARD_PLAN_TRAILING_DIGITS_LABEL">Card Pan Trailing digits</core:message>
    <core:message key="CONFIGURATION_INVALID">Payment Portal configuration not valid</core:message>
    <core:message key="CHECK_CUSTOMER_LOYALTY">Must have a customer loyalty account to register card</core:message>
    <core:message key="NOT_ALLOWED_WITHOUT_CUSTOMER_LOYALTY">Must be a Loyalty member</core:message>
    <core:message key="EMPTY_BASKET">Basket is not Empty</core:message>
    <core:message key="NO_MATCHING_TOKEN">No matching cards</core:message>
    <core:message key="EXPIRED_CARD_PAYMENT">Selected card is expired, Please select another card</core:message>
    <core:message key="BUTTON_REGISTER">Register</core:message>
    <core:message key="AMEND_BUTTON_LABEL">Amend</core:message>
    <core:message key="CARD_PAN_TRAILING_DIGITS_LABEL">Card Pan Trailing digits</core:message>
    <core:message key="CARD_EXPIRY_DATE_LABEL">Card Expiry Date</core:message>
    <core:message key="UP_BUTTON_LABEL">Up</core:message>
    <core:message key="DOWN_BUTTON_LABEL">Down</core:message>
    <core:message key="ADD_BUTTON_LABEL">Add</core:message>
    <core:message key="EDIT_BUTTON">Edit</core:message>
    <core:message key="REMOVE_BUTTON">Remove</core:message>
    <core:message key="PREFERENCE_REGISTER_CAPTURE_CNP">Please enter Customer Preferences and check the details with the customer, then press Register to continue or Cancel to return.</core:message>
    <core:message key="PREFERENCE_REGISTER_CAPTURE">Please Capture Customer Preferences, press Register to continue or Cancel to return.</core:message>
    <core:message key="PREFERENCE_UPDATE_CAPTURE">Please Capture Customer Preference, press Update to continue or Cancel to return.</core:message>
    <core:message key="ADD_CUSTOMER">Add customer card? Press OK to continue or Cancel to return.</core:message>
    <core:message key="REGISTER_EDIT_CUSTOMER">Update Card: {selectedItem.cardScheme} *********{selectedItem.panTrailing} for customer: {customer.customerName.title} {customer.customerName.surname}?</core:message>
    <core:message key="REGISTER_CUSTOMER">Register card: {cardRegistrationItem.cardDetails.issuerName} {cardRegistrationItem.cardDetails.mangledPAN} for customer: {cardRegistrationItem.customerName.title} {cardRegistrationItem.customerName.surname}.</core:message>
    <core:message key="REGISTERING_MESSAGE">Registering..</core:message>
    <core:message key="UPDATING_MESSAGE">Updating..</core:message>
    <core:message key="REMOVING_MESSAGE">Deleting..</core:message>
    <core:message key="AUTHORISING_MESSAGE">Authorising..</core:message>
    <core:message key="EXPIRED_MESSAGE">Card is Expired. Ask the customer to insert another card</core:message>
    <core:message key="REGISTRATION_SUCCESSFUL">Card Registration Successful</core:message>
    <core:message key="UPDATE_SUCCESSFUL">Card Updated Successfully</core:message>
    <core:message key="DELETE_SUCCESSFUL">Card Deleted Successfully</core:message>
    <core:message key="REGISTERED_SUCCESSFUL">Successfully Completed</core:message>
    <core:message key="REMOVE_ONE_CARD">Do you wish to also remove the payment customer details?</core:message>
    <core:message key="REMOVE_CARD_DETAIL">Remove registered card:{selectedItem.cardScheme} *********{selectedItem.panTrailing} for customer:{customerCardsResponse.customerName.title} {customerCardsResponse.customerName.surname} {customerCardsResponse.customerName.forename}?</core:message>
    <core:message key="EXPIRY_DATE_LABEL">Card Expiry Date</core:message>
    <core:message key="BUTTON_UPDATE">Update</core:message>
    <core:message key="NO_STORED_CARD">No stored cards found for Customer {customer.customerName.title} {customer.customerName.surname} {customer.customerName.forename} </core:message>
    <core:message key="REGISTERED_CARDS_LIST_EDIT">Currently registered cards are shown. Press Edit to amend details or Add to add a new card.</core:message>
    <core:message key="REGISTERED_CARDS_LIST_PAYMENT">Currently registered cards are shown. Select card for payment</core:message>
    <core:message key="EXIT_REGISTRATION">Exit the card registration process?</core:message>
    <core:message key="NO_CARDS_ERROR">No stored cards found for Customer {customer.customerName.title} {customer.customerName.forename} {customer.customerName.surname}</core:message>
    <core:message key="CANCEL_TENDER">Cancel the card tender?</core:message>
    <core:message key="HARRODS_CARD_TENDER">Harrods Tender</core:message>
    <core:message key="INSERT_CARD_REGISTRATION">Please ask the customer to Insert the Card to be registered</core:message>
    <core:message key="SELECT_BUTTON_LABEL">Select</core:message>
    <core:message key="FAILED_SERVICE_REGISTRATION">Failed to invoke registration service</core:message>
    <core:message key="FAILED_SERVICE_UPDATE">Failed to invoke update service</core:message>
    <core:message key="FAILED_SERVICE_AUTHORISE">Failed to invoke authorise service</core:message>
    <core:message key="FAILED_SERVICE_DELETE">Failed to invoke delete service</core:message>
    <core:message key="FAILED_SERVICE_REFUND">Failed to invoke refund service</core:message>
    <core:message key="FAILED_SERVICE_VOID">Failed to invoke card void service</core:message>
    <core:message key="FAILED_SERVICE_GETCUSTOMERCARD">Failed to invoke card service</core:message>
    <core:message key="DCC_TENDER_CONFIRMATION">{format:formatCurrencyCurrency(dCCAmount,dCCCurrency.currencyId)}/{format:formatCurrencyCurrency(cardTenderItem.tenderAmount,baseCurrency.currencyId)} will be debited to {cardTenderItem.cardDetails.cardScheme} *********{selectedItem.panTrailing} </core:message>
    <core:message key="FAILED_SERVICE">Failed to invoke service</core:message>
    <core:message key="TENDER_CONFIRMATION">{format:formatCurrencyCurrency(cardTenderItem.tenderAmount,cardTenderItem.currencyId)} will be debited to {cardTenderItem.cardDetails.cardScheme} *********{selectedItem.panTrailing}</core:message>
    <core:message key="TENDER_CREDIT_CONFIRMATION">{format:formatCurrencyCurrency(cardTenderItem.tenderAmount,cardTenderItem.currencyId)} will be credited to {cardTenderItem.cardDetails.cardScheme} *********{selectedItem.panTrailing}{iteratorItem.panTrailing}</core:message>
    <core:message key="DCC_TENDER_CREDIT_CONFIRMATION">{format:formatCurrencyCurrency(dCCAmount,dCCCurrency.currencyId)}/{format:formatCurrencyCurrency(cardTenderItem.tenderAmount,baseCurrency.currencyId)} will be credited to {cardTenderItem.cardDetails.cardScheme} *********{selectedItem.panTrailing}{iteratorItem.panTrailing} </core:message>
    <core:message key="REFUND_ORIGINAL_STORED_CARD">Refund to Original Stored Card?</core:message>
    <core:message key="REFUND_ORIGINAL_STORED_CARD_PORTAL">Refund to Original Stored Card? Portal sign-on is required.</core:message>
    <core:message key="REFUND_STORED_CARD">Refund to Stored Card?</core:message>
    <core:message key="FINAL_OUTCOME">Not Authorised for stored card refund</core:message>
    <core:message key="CONFIRM_REFUND_ORIGINAL_STORED_CARD_TENDER">Please confirm refund {format:formatCurrency(cardTenderItem.tenderAmount)}{(cardTenderItem.currencyId != baseCurrency.currencyId ? concat(concat(' (', format:formatCurrencyCurrency(cardTenderItem.foreignAmount, cardTenderItem.currencyId)), ')') : '')} to {cardTenderItem.cardDetails.cardDescription} card. 
Card number ending {cardTenderItem.cardDetails.mangledPAN}, expiry {(strings:splitExpiryDate(cardTenderItem.cardDetails.expiryDate))}?</core:message>
    <core:message key="CARD_REGISTER_TITLE">Customer Card Registration</core:message>
    <core:message key="CARD_REGISTRATION_AT_PED">Please ask the customer to confirm the details</core:message>
    <core:message key="CARD_REGISTRATION_CUSTOMER_NAME">Customer Name</core:message>
    <core:message key="CARD_REGISTRATION_CUSTOMER_ADDRESS">Customer Address</core:message>
    <core:message key="CARD_REGISTRATION_CONTACT_PHONE_NUMBER">Contact Phone Number</core:message>
    <core:message key="CARD_REGISTRATION_CONTACT_EMAIL_ADDRESS">Contact Email Address</core:message>
    <core:message key="CARD_REGISTRATION_CARD_CURRENCY">Card Currency</core:message>
    <core:message key="CARD_REGISTRATION_DCC_PREFERENCE">DCC Preference</core:message>
    <core:message key="CARD_REGISTRATION_FINAL_CONFIRMATION">Final Confirmation</core:message>
    <core:message key="NOT_ALLOWED_STOREDCARD_WITHOUT_CUSTOMER_LOYALTY">Stored Card can only be used with a customer loyalty account</core:message>
    <core:message key="ICC_READER_CONFIG_MISSING">ICC Reader Configuration {iccReaderConfigurationId} is not available</core:message>
    <core:message key="CARD_ALREADY_REGISTERED">This card is already registered. Either remove the card and add it again or update preferences</core:message>
    <core:message key="SERVICE_ERROR_MESSAGE">{isEmpty(paymentErrorResponse.errorMessage) ? 'Error' : paymentErrorResponse.errorMessage}</core:message>
    <core:message key="GENERIC_ERROR_MESSAGE">An error has occurred. Please contact your administrator</core:message>
    <core:message key="TRAINING_MODE_OPERATION_NOT_ALLOWED_MESSAGE">This operation cannot be completed when till is in training mode.</core:message>
    <core:message key="TRAINING_MODE_ERROR_MESSAGE">Registration cannot be completed when till is in training mode.</core:message>
    <core:message key="enactor.paymentPortal.GetCustomer.Name">Retrieve Customer</core:message>
    <core:message key="enactor.paymentPortal.GetCustomer.Description">The user can retrieve a customer</core:message>
    <core:message key="enactor.paymentPortal.GetCustomerCard.Name">Retrieve Customer Card</core:message>
    <core:message key="enactor.paymentPortal.GetCustomerCard.Description">The user can retrieve a customer card</core:message>
    <core:message key="enactor.paymentPortal.RemoveCustomerCard.Name">Remove Customer Card</core:message>
    <core:message key="enactor.paymentPortal.RemoveCustomerCard.Description">The user can remove a customer card</core:message>
    <core:message key="enactor.portal.GetCustomer.Name">Retrieve Customer</core:message>
    <core:message key="enactor.portal.GetCustomer.Description">The user can retrieve a customer</core:message>
    <core:message key="enactor.portal.GetCustomerCard.Name">Retrieve Customer Card</core:message>
    <core:message key="enactor.portal.GetCustomerCard.Description">The user can retrieve a customer card</core:message>
    <core:message key="enactor.portal.RegisterCustomerCard.Name">Register Customer Card</core:message>
    <core:message key="enactor.portal.RegisterCustomerCard.Description">The user can register customer card</core:message>
    <core:message key="enactor.pos.AuthorisesStoredCardRefundSelectCard.Name">Authorises Stored Card Refund Select Card</core:message>
    <core:message key="enactor.pos.AuthorisesStoredCardRefundSelectCard.Description">The user can authorise refund to a stored card.</core:message>
    <core:message key="enactor.pos.StoredCardRefundSelectCardAllowed.Name">Stored Card Refund Select Card Allowed</core:message>
    <core:message key="enactor.pos.StoredCardRefundSelectCardAllowed.Description">The user is allowed refund to a stored card.</core:message>
    <core:message key="enactor.pos.AuthorisesStoredCardRefundOriginalCardNoPortal.Name">Authorises Stored Original Card Refund Without Portal</core:message>
    <core:message key="enactor.pos.AuthorisesStoredCardRefundOriginalCardNoPortal.Description">The user can authorise a stored card refund for original card with no portal.</core:message>
    <core:message key="enactor.pos.AuthorisesStoredCardRefundOriginalCardWithPortal.Name">Authorises Stored Original Card Refund With Portal</core:message>
    <core:message key="enactor.pos.AuthorisesStoredCardRefundOriginalCardWithPortal.Description">The user can authorise a stored card refund for original card with a portal.</core:message>
    <core:message key="enactor.pos.StoredCardRefundOriginalCardNoPortal.Name">Stored Card Refund Original Card Without Portal</core:message>
    <core:message key="enactor.pos.StoredCardRefundOriginalCardNoPortal.Description">The user can do a stored card refund for original card without a portal.</core:message>
    <core:message key="enactor.pos.StoredCardRefundOriginalCardWithPortal.Name">Stored Card Refund Original Card With Portal</core:message>
    <core:message key="enactor.pos.StoredCardRefundOriginalCardWithPortal.Description">The user can do a stored card refund for original card with a portal.</core:message>
    <core:message key="enactor.pos.AuthorisesStoredCardTender.Name">Authorises Stored Card Tender</core:message>
    <core:message key="enactor.pos.AuthorisesStoredCardTender.Description">The user can authorise a stored card tender.</core:message>
    <core:message key="enactor.pos.StoredCardTenderAllowed.Name">Stored Card Tender Allowed</core:message>
    <core:message key="enactor.pos.StoredCardTenderAllowed.Description">The user can allow a stored card tender.</core:message>
    <core:message key="enactor.pos.AuthorisesRegisterPaymentCard.Name">Authorises Register Payment Card</core:message>
    <core:message key="enactor.pos.AuthorisesRegisterPaymentCard.Description">The user can authorise registering a payment card.</core:message>
    <core:message key="enactor.pos.AuthorisesRegisterPaymentCardNotPresent.Name">Authorises Register Payment Card Not Present</core:message>
    <core:message key="enactor.pos.AuthorisesRegisterPaymentCardNotPresent.Description">The user can authorise the register of a payment card that is not present.</core:message>
    <core:message key="enactor.pos.RegisterPaymentCardAllowed.Name">Register Payment Card Allowed</core:message>
    <core:message key="enactor.pos.RegisterPaymentCardAllowed.Description">The user can register a payment card.</core:message>
    <core:message key="enactor.pos.RegisterPaymentCardNotPresentAllowed.Name">Register Payment Card Not Present Allowed</core:message>
    <core:message key="enactor.pos.RegisterPaymentCardNotPresentAllowed">The user can register a payment card that is not present.</core:message>
</core:messageResource>
