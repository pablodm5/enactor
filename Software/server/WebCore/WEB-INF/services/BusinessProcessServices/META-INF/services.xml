<serviceGroup>
	<service name="EntityServerService" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application">
		<parameter name="ServiceClass">com.enactor.core.servers.EntityServerService</parameter>
		<parameter name="useOriginalwsdl">true</parameter>
		<description>Entity Server Service</description>
		<operation name="invokeEntityServer">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="ping">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
		</operation>
	</service>
	<service name="TaskManagerService" targetNamespace="http://www.enactor.com/task" scope="application">
		<description>This service is an implementation of the WS-HumanTask programming API</description>
		<messageReceivers>
			<messageReceiver mep="http://www.w3.org/2004/08/wsdl/in-out" class="com.enactor.task.web.TaskManagerEmbeddedMessageReceiver" />
		</messageReceivers>
		<operation name="ping">
			<actionMapping>urn:ping</actionMapping>
		</operation>
		<operation name="addAttachment">
			<actionMapping>urn:addAttachment</actionMapping>
		</operation>
		<operation name="addComment">
			<actionMapping>urn:addComment</actionMapping>
		</operation>
		<operation name="claim">
			<actionMapping>urn:claim</actionMapping>
		</operation>
		<operation name="complete">
			<actionMapping>urn:complete</actionMapping>
		</operation>
		<operation name="remove">
			<actionMapping>urn:remove</actionMapping>
		</operation>
		<operation name="delegate">
			<actionMapping>urn:delegate</actionMapping>
		</operation>
		<operation name="deleteAttachments">
			<actionMapping>urn:deleteAttachments</actionMapping>
		</operation>
		<operation name="deleteFault">
			<actionMapping>urn:deleteFault</actionMapping>
		</operation>
		<operation name="deleteOutput">
			<actionMapping>urn:deleteOutput</actionMapping>
		</operation>
		<operation name="fail">
			<actionMapping>urn:fail</actionMapping>
		</operation>
		<operation name="forward">
			<actionMapping>urn:forward</actionMapping>
		</operation>
		<operation name="getApplicationWorkflowId">
			<actionMapping>urn:getApplicationWorkflowId</actionMapping>
		</operation>
		<operation name="getTaskPresentationData">
			<actionMapping>urn:getTaskPresentationData</actionMapping>
		</operation>
		<operation name="getAttachmentInfos">
			<actionMapping>urn:getAttachmentInfos</actionMapping>
		</operation>
		<operation name="getAttachments">
			<actionMapping>urn:getAttachments</actionMapping>
		</operation>
		<operation name="getComments">
			<actionMapping>urn:getComments</actionMapping>
		</operation>
		<operation name="getFaultData">
			<actionMapping>urn:getFaultData</actionMapping>
		</operation>
		<operation name="getFaultName">
			<actionMapping>urn:getFaultName</actionMapping>
		</operation>
		<operation name="getInput">
			<actionMapping>urn:getInput</actionMapping>
		</operation>
		<operation name="getMyTaskAbstracts">
			<actionMapping>urn:getMyTaskAbstracts</actionMapping>
		</operation>
		<operation name="getMyTasks">
			<actionMapping>urn:getMyTasks</actionMapping>
		</operation>
		<operation name="getMyTasksOnPresentationGroup">
			<actionMapping>urn:getMyTasksOnPresentationGroup</actionMapping>
		</operation>
		<operation name="getPresentationGroupHierarchy">
			<actionMapping>urn:getPresentationGroupHierarchy</actionMapping>
		</operation>
		<operation name="getOutput">
			<actionMapping>urn:getOutput</actionMapping>
		</operation>
		<operation name="getTaskInfo">
			<actionMapping>urn:getTaskInfo</actionMapping>
		</operation>
		<operation name="getTaskAbstract">
			<actionMapping>urn:getTaskAbstract</actionMapping>
		</operation>
		<operation name="initTask">
			<actionMapping>urn:initTask</actionMapping>
		</operation>
		<operation name="canPerform">
			<actionMapping>urn:canPerform</actionMapping>
		</operation>
		<operation name="claimAndListTasks">
			<actionMapping>urn:claimAndListTasks</actionMapping>
		</operation>
		<operation name="releaseAndListTasks">
			<actionMapping>urn:releaseAndListTasks</actionMapping>
		</operation>
		<operation name="nominate">
			<actionMapping>urn:nominate</actionMapping>
		</operation>
		<operation name="purgeTask">
			<actionMapping>urn:purgeTask</actionMapping>
		</operation>
		<operation name="release">
			<actionMapping>urn:release</actionMapping>
		</operation>
		<operation name="resume">
			<actionMapping>urn:suspend</actionMapping>
		</operation>
		<operation name="setFault">
			<actionMapping>urn:setFault</actionMapping>
		</operation>
		<operation name="setOutput">
			<actionMapping>urn:setOutput</actionMapping>
		</operation>
		<operation name="skip">
			<actionMapping>urn:skip</actionMapping>
		</operation>
		<operation name="start">
			<actionMapping>urn:start</actionMapping>
		</operation>
		<operation name="stop">
			<actionMapping>urn:stop</actionMapping>
		</operation>
		<operation name="suspend">
			<actionMapping>urn:suspend</actionMapping>
		</operation>
		<operation name="exit">
			<actionMapping>urn:exit</actionMapping>
		</operation>
		<operation name="delegateStartAndComplete">
			<actionMapping>urn:delegateStartAndComplete</actionMapping>
		</operation>
		<operation name="claimStartAndComplete">
			<actionMapping>urn:claimStartAndComplete</actionMapping>
		</operation>
		<operation name="startAndComplete">
			<actionMapping>urn:startAndComplete</actionMapping>
		</operation>
		<operation name="getReservedTaskAbstracts">
			<actionMapping>urn:getReservedTaskAbstracts</actionMapping>
		</operation>
		<operation name="listMyTaskSummaries">
			<actionMapping>urn:listMyTaskSummaries</actionMapping>
		</operation>
		<operation name="listTasks">
			<actionMapping>urn:listTasks</actionMapping>
		</operation>
		<operation name="countMyTaskSummaries">
			<actionMapping>urn:countMyTaskSummaries</actionMapping>
		</operation>
		<operation name="getPotentialOwners">
			<actionMapping>urn:getPotentialOwners</actionMapping>
		</operation>
		
<!--
	
				<module ref="rampart" />
	<module ref="addressing" />

		--><!--<wsp:Policy wsu:Id="SigEncr" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
			xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy">
			<wsp:ExactlyOne>
				<wsp:All>
					<sp:AsymmetricBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
						<wsp:Policy>
							<sp:InitiatorToken>
								<wsp:Policy>
									<sp:X509Token sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient">
										<wsp:Policy>
											<sp:RequireThumbprintReference />
											<sp:WssX509V1Token10 />
										</wsp:Policy>
									</sp:X509Token>
								</wsp:Policy>
							</sp:InitiatorToken>
							<sp:RecipientToken>
								<wsp:Policy>
									<sp:X509Token sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Never">
										<wsp:Policy>
											<sp:RequireThumbprintReference />
											<sp:WssX509V3Token10 />
										</wsp:Policy>
									</sp:X509Token>
								</wsp:Policy>
							</sp:RecipientToken>
							<sp:AlgorithmSuite>
								<wsp:Policy>
									<sp:TripleDesRsa15 />
								</wsp:Policy>
							</sp:AlgorithmSuite>
							<sp:Layout>
								<wsp:Policy>
									<sp:Strict />
								</wsp:Policy>
							</sp:Layout>
							<sp:IncludeTimestamp/>
					
							<sp:OnlySignEntireHeadersAndBody />
						</wsp:Policy>
					</sp:AsymmetricBinding>
								 <sp:SupportingTokens xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">  
				       <wsp:Policy>  
					  <sp:UsernameToken  
					    sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient"/>  
				       </wsp:Policy>  
			  </sp:SupportingTokens>  
					<sp:Wss10 xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
						<wsp:Policy>
							<sp:MustSupportRefKeyIdentifier />
							<sp:MustSupportRefIssuerSerial />
						</wsp:Policy>
					</sp:Wss10>
					
						<sp:SignedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy"> <sp:Body/> </sp:SignedParts>
					
					<sp:EncryptedParts xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
						<sp:Body />
					</sp:EncryptedParts>

					<ramp:RampartConfig xmlns:ramp="http://ws.apache.org/rampart/policy">
						<ramp:user>service</ramp:user>
						<ramp:encryptionUser>client</ramp:encryptionUser>
						<ramp:passwordCallbackClass>com.enactor.core.services.PWCBHandler</ramp:passwordCallbackClass>

						<ramp:signatureCrypto>
							<ramp:crypto provider="org.apache.ws.security.components.crypto.Merlin">
								<ramp:property name="org.apache.ws.security.crypto.merlin.keystore.type">JKS</ramp:property>
								<ramp:property name="org.apache.ws.security.crypto.merlin.file">service.jks</ramp:property>
								<ramp:property name="org.apache.ws.security.crypto.merlin.keystore.password">apache</ramp:property>
							</ramp:crypto>
						</ramp:signatureCrypto>
						<ramp:encryptionCypto>
							<ramp:crypto provider="org.apache.ws.security.components.crypto.Merlin">
								<ramp:property name="org.apache.ws.security.crypto.merlin.keystore.type">JKS</ramp:property>
								<ramp:property name="org.apache.ws.security.crypto.merlin.file">service.jks</ramp:property>
								<ramp:property name="org.apache.ws.security.crypto.merlin.keystore.password">apache</ramp:property>
							</ramp:crypto>
						</ramp:encryptionCypto>
					</ramp:RampartConfig>

				</wsp:All>
			</wsp:ExactlyOne>
		</wsp:Policy>
	--></service>
	<service name="GenericActivityFlow" scope="application" targetNamespace="http://www.enactor.com/core">
		<operation name="invokeGenericActivityFlow">
			<parameter name="portType">GenericActivityFlowPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.bpel.rt.service.BPELInOutEmbeddedMessageReceiver" />
		</operation>
		<operation name="timeoutGenericActivityFlow">
			<parameter name="portType">GenericActivityFlowPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.bpel.rt.service.BPELInOutEmbeddedMessageReceiver" />
		</operation>
	</service>
	<service name="ActivityFlowCompensation" scope="application" targetNamespace="http://www.enactor.com/core">
		<operation name="compensate">
			<parameter name="portType">ActivityFlowCompensationPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.bpel.rt.service.BPELInOutEmbeddedMessageReceiver" />
		</operation>
	</service>
	<service name="BusinessProcessService" scope="application" targetNamespace="http://www.enactor.com/core">
		<parameter name="ServiceClass">com.enactor.task.web.BusinessProcessService</parameter>
		<parameter name="useOriginalwsdl">false</parameter>
		<operation name="getPendingActivityDetails">
			<actionMapping>urn:getPendingActivityDetails</actionMapping>
			<messageReceiver mep="http://www.w3.org/2004/08/wsdl/in-out" class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="completePendingActivity">
			<actionMapping>urn:completePendingActivity</actionMapping>
			<messageReceiver mep="http://www.w3.org/2004/08/wsdl/in-out" class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>		
		<operation name="listBPActivityInstancesWithUser">
			<actionMapping>urn:listBPActivityInstancesWithUser</actionMapping>
			<messageReceiver mep="http://www.w3.org/2004/08/wsdl/in-out" class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="getBPDataForReview">
			<actionMapping>urn:getBPDataForReview</actionMapping>
			<messageReceiver mep="http://www.w3.org/2004/08/wsdl/in-out" class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
		</operation>
	</service>
	<service name="BPInstanceServerService" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application">
		<parameter name="ServiceClass">com.enactor.mfc.business.process.BPInstanceDBServer</parameter>
		<description>BP Entity Server Service</description>
		<operation name="listAll">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="listForUserPrivilegesAdminister">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="listForUser">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="load">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="checkExists">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
	</service>
	<service name="BPActivityInstanceServerService" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application">
		<parameter name="ServiceClass">com.enactor.core.business.process.BPActivityInstanceDBServer</parameter>
		<description>BP Activity Entity Server Service</description>
		<operation name="listAll">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="load">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="checkExists">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
	</service>
    <service name="BPHistoryServerService" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application">
        <parameter name="ServiceClass">com.enactor.core.business.process.BusinessProcessHistoryDBServer</parameter>
        <description>BP History Server Service</description>
        <operation name="listAll">
            <messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
        </operation>
    </service>
	<service name="BPAppProcessLogServerService" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application">
		<parameter name="ServiceClass">com.enactor.mfc.logging.ApplicationProcessLogDBServer</parameter>
		<description>BP Entity Server Service</description>
		<operation name="listAll">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="load">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
		<operation name="checkExists">
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityDBSupportInOutMessageReceiver" />
		</operation>
	</service>
	<service name="LocationPrivilegeEvaluator" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application"
		targetNamespace="http://www.enactor.com/core">
		<parameter name="ServiceClass">com.enactor.mfc.people.LocationPrivilegeEvaluator</parameter>
		<operation name="evaluate">
			<parameter name="portType">LocationPrivilegeEvaluatorPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
			<actionMapping>urn:evaluate</actionMapping>
		</operation>
	</service>
	<service name="LocationPrivilegeOrUserEvaluator" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application"
		targetNamespace="http://www.enactor.com/core">
		<parameter name="ServiceClass">com.enactor.mfc.people.LocationPrivilegeOrUserEvaluator</parameter>
		<operation name="evaluate">
			<parameter name="portType">LocationPrivilegeOrUserEvaluatorPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
			<actionMapping>urn:evaluate</actionMapping>
		</operation>
	</service>
	<service name="LocationRoleEvaluator" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application"
		targetNamespace="http://www.enactor.com/core">
		<parameter name="ServiceClass">com.enactor.mfc.people.LocationRoleEvaluator</parameter>
		<operation name="evaluate">
			<parameter name="portType">LocationRoleEvaluatorPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
			<actionMapping>urn:evaluate</actionMapping>
		</operation>
	</service>
	<service name="PrivilegeEvaluator" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application"
		targetNamespace="http://www.enactor.com/core">
		<parameter name="ServiceClass">com.enactor.mfc.people.PrivilegeEvaluator</parameter>
		<operation name="evaluate">
			<parameter name="portType">PrivilegeEvaluatorPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
			<actionMapping>urn:evaluate</actionMapping>
		</operation>
	</service>
	<service name="RoleEvaluator" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application"
		targetNamespace="http://www.enactor.com/core">
		<parameter name="ServiceClass">com.enactor.mfc.people.RoleEvaluator</parameter>
		<operation name="evaluate">
			<parameter name="portType">PrivilegeEvaluatorPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
			<actionMapping>urn:evaluate</actionMapping>
		</operation>
	</service>
	<service name="SimpleUserEvaluator" class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle" scope="application"
		targetNamespace="http://www.enactor.com/core">
		<parameter name="ServiceClass">com.enactor.task.people.SimpleUserEvaluator</parameter>
		<operation name="evaluate">
			<parameter name="portType">SimpleUserEvaluatorPT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
			<actionMapping>urn:evaluate</actionMapping>
		</operation>
	</service>
	<service name="CoreEntityXMLUploadService"
		class="com.enactor.core.webService.axis2.Axis2WebserviceLifecycle"
		scope="application" targetNamespace="http://www.enactor.com/core">
		<parameter name="ServiceClass">com.enactor.core.entities.service.EntityXMLUploadService</parameter>
		<operation name="uploadEntities">
			<parameter name="portType">CoreEntityXMLUploadServicePT</parameter>
			<parameter name="portTypeNamespace">http://www.enactor.com/core</parameter>
			<messageReceiver
				class="com.enactor.core.webService.axis2.MJEntityInOutMessageReceiver" />
			<actionMapping>urn:uploadEntities</actionMapping>
		</operation>
  </service>
</serviceGroup>
